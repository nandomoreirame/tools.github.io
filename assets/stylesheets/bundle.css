/*! normalize.css v7.0.0 | MIT License | github.com/necolas/normalize.css */html{line-height:1.15;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}body{margin:0}article,aside,footer,header,nav,section{display:block}h1{font-size:2em;margin:.67em 0}figcaption,figure,main{display:block}figure{margin:1em 40px}hr{box-sizing:content-box;height:0;overflow:visible}pre{font-family:monospace,monospace;font-size:1em}a{background-color:transparent;-webkit-text-decoration-skip:objects}abbr[title]{border-bottom:none;text-decoration:underline;text-decoration:underline dotted}b,strong{font-weight:inherit;font-weight:bolder}code,kbd,samp{font-family:monospace,monospace;font-size:1em}dfn{font-style:italic}mark{background-color:#ff0;color:#000}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}audio,video{display:inline-block}audio:not([controls]){display:none;height:0}img{border-style:none}svg:not(:root){overflow:hidden}button,input,optgroup,select,textarea{font-family:sans-serif;font-size:100%;line-height:1.15;margin:0}button,input{overflow:visible}button,select{text-transform:none}[type=reset],[type=submit],button,html [type=button]{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:1px dotted ButtonText}fieldset{padding:.35em .75em .625em}legend{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}progress{display:inline-block;vertical-align:baseline}textarea{overflow:auto}[type=checkbox],[type=radio]{box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-cancel-button,[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}details,menu{display:block}summary{display:list-item}canvas{display:inline-block}[hidden],template{display:none}.clearfix:after,.container:after,.footer:after,.grid-flex:after,.header:after,.main:after,.pagination:after,.row:after,.search__group:after,.toolsCard__footer:after{content:"";display:table;clear:both}.show{display:block;opacity:1;visibility:visible}.hide{display:none;opacity:0;visibility:hidden}.pull-left{float:left}.pull-right{float:right}.sr-only,.toolsCard__image,input#toggleMenu,input#toggleSearch,input#toggleSidebar{position:absolute;width:1px;height:1px;padding:0;margin:-1px;overflow:hidden;clip:rect(0,0,0,0);border:0}.video-wrapper{position:relative;padding-bottom:56.25%;padding-top:25px;height:0}.video-wrapper embed,.video-wrapper iframe,.video-wrapper object{position:absolute;top:0;left:0;width:100%;height:100%}body{background-color:#fbfffa}hr{border:none;border-bottom:.05rem solid rgba(0,0,0,.1);margin:30px 0}.base{min-height:100vh}.main{background-color:#fbfffa;padding:120px 1rem 0;transition:all .3s cubic-bezier(.4,2,.68,1);width:100%;margin-left:0}.toggleMenu,.toggleSidebar{background:none transparent;border:none;padding:10px;cursor:pointer;transition:all .5s cubic-bezier(.4,2,.68,1);transform:rotate(0deg)}.toggleMenu svg,.toggleSidebar svg{margin:0;padding:0;line-height:1}.toggleMenu{float:right;position:relative;z-index:5}.toggleSidebar{float:left;transform:rotate(180deg);position:fixed;top:0;left:20px;margin:0;line-height:1;z-index:6}.toggleSidebar svg{stroke:#262626}input#toggleMenu:checked~.header__navbar{transform:translate3d(0,-35%,0)}input#toggleSidebar:checked~.sidebar{transform:translateZ(0)}input#toggleSidebar:checked~.main,input#toggleSidebar:checked~.main .header{width:calc(100% - 20rem);margin-left:20rem}input#toggleSidebar:checked~.toggleSidebar{transform:rotate(0deg);margin-left:0;top:5px}input#toggleSidebar:checked~.toggleSidebar svg{stroke:#fff}body,html{font-size:16px;font-size:1rem}body{color:#262626;font-family:Raleway,Helvetica,Arial,sans-serif;font-weight:500;line-height:1.6}h1,h2,h3,h4,h5,h6,p,ul{margin:.9375rem 0}h1:first-child,h2:first-child,h3:first-child,h4:first-child,h5:first-child,h6:first-child,p:first-child,ul:first-child{margin-top:0}h1:last-child,h2:last-child,h3:last-child,h4:last-child,h5:last-child,h6:last-child,p:last-child,ul:last-child{margin-bottom:0}p.lead{text-align:center;padding-bottom:60px;font-size:19.2px;font-size:1.2rem;font-weight:300}p.lead span{margin-bottom:.9375rem;display:block}h1{font-size:32px;font-size:2rem}h2{font-size:25.6px;font-size:1.6rem}h3{font-size:22.4px;font-size:1.4rem}h4{font-size:19.2px;font-size:1.2rem}h5,h6{font-size:16px;font-size:1rem}a{color:#6fa1e8;text-decoration:underline}a:focus,a:hover{color:#7daaea;text-decoration:none}a:focus{outline:3px solid rgba(111,161,232,.7);outline-offset:3px}html{box-sizing:border-box}*,:after,:before{box-sizing:inherit}.container{width:auto;max-width:100%;float:none;display:block;margin-right:auto;margin-left:auto;padding-left:0;padding-right:0;padding-right:15px;padding-left:15px}.container:after{content:"";display:table;clear:both}.grid-flex,.row{margin-left:-15px;margin-right:-15px}.grid-flex{display:flex}.grid-flex--flow{flex-flow:row}.grid-flex--wrap{flex-wrap:wrap}.grid-flex--space-around{justify-content:space-around}.grid-flex--center{justify-content:center;align-items:center}.grid-flex--reverse{flex-wrap:wrap-reverse}.grid-flex__column{flex:1;width:100%;display:inline-block;padding-left:15px;padding-right:15px}.grid-flex--fit>.grid-flex__column{flex:1}.grid-flex--full>.grid-flex__column{flex:0 0 100%}.grid-flex--1of2>.grid-flex__column{flex:0 0 50%}.grid-flex--1of3>.grid-flex__column{flex:0 0 33.3333%}.grid-flex--1of4>.grid-flex__column{flex:0 0 25%}.button,.pagination__next,.pagination__prev{display:inline-block;text-decoration:none;text-align:center;text-transform:none;font-size:14px;font-size:.875rem;padding:.75rem 1.25rem;margin:0 .5rem;font-weight:500;color:#9a9ea4;background:none transparent;border-radius:.25rem;border:1px solid transparent;cursor:pointer;-webkit-appearance:none;appearance:none;overflow:visible;line-height:1;will-change:transform;-moz-osx-font-smoothing:grayscale;backface-visibility:hidden;transform:translateZ(0);transition:transform .15s ease-out,color .15s ease-out,background-color .15s ease-out}.button:focus,.button:hover,.pagination__next:focus,.pagination__next:hover,.pagination__prev:focus,.pagination__prev:hover{background-color:#b3b6bb;color:#fff}.button--default,.pagination__next,.pagination__next--default,.pagination__prev,.pagination__prev--default{border-color:#9a9ea4}.button--primary,.pagination__next--primary,.pagination__prev--primary{border-color:#fff;background:#9a9ea4;color:#fff}.pagination{display:block;text-align:center;margin-top:30px}.pagination .container{position:relative}.pagination a,.pagination span{display:inline-block;padding:15px;width:100%}.pagination span{opacity:.6}.pagination__next,.pagination__prev{margin:0}.header{min-height:60px;padding-left:1.875rem;padding-right:1.875rem;margin-bottom:30px;position:fixed;width:100%;margin-left:0}.header,.header__navbar{background-color:#fff;box-shadow:0 0 40px 0 rgba(0,0,0,.1);z-index:4;top:0;right:0;left:0;transition:all .3s cubic-bezier(.4,2,.68,1)}.header__navbar{position:absolute;transform:translate3d(0,-150%,0)}.header__nav{text-align:right;list-style:none;padding:240px 30px 30px;margin:0}.header__nav-item{display:block}.header__nav-link,.header__nav-search,.header__nav svg{display:inline-block;line-height:60px}.header__nav-link,.header__nav-search{font-size:16px;font-size:1rem;font-weight:500;letter-spacing:.1px;text-decoration:none;padding:0 1.25rem;cursor:pointer;color:#9a9ea4;position:relative}.header__nav-link:after,.header__nav-search:after{display:block;content:"";width:0;height:3px;background:#6fa1e8;position:absolute;bottom:0;transition:width .12s ease-in-out}.header__nav-link--active,.header__nav-link:hover,.header__nav-search--active,.header__nav-search:hover{color:#6fa1e8}.header__nav-link--active:after,.header__nav-link:hover:after,.header__nav-search--active:after,.header__nav-search:hover:after{width:40%}.header__nav-search svg{position:relative;top:5px}.sidebar{max-width:20rem;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;flex-direction:column;height:100vh;background:#3a3838 url(../images/hero-image.png) no-repeat 85% 0;background-size:cover 100%;z-index:5;position:fixed;left:0;right:0;bottom:0;transition:all .3s cubic-bezier(.4,2,.68,1);transform:translate3d(-100%,0,0)}.sidebar:before{content:"";position:absolute;display:block;width:100%;height:100%;top:0;right:0;bottom:0;left:0;background-color:rgba(58,56,56,.9);z-index:1}.sidebar__title{display:block;text-align:center;font-size:22px;font-size:1.375rem;padding:1.875rem 1.25rem;flex:none}.sidebar__title a{color:#fff;font-weight:700;text-decoration:none}.sidebar__title svg{display:inline-block}.sidebar__title span{display:block}.sidebar__footer,.sidebar__navbar,.sidebar__title{position:relative;z-index:2}.sidebar__navbar{padding:0 1.25rem;flex:1}.sidebar__navbar,.sidebar__navbar .nav{overflow-y:auto}.sidebar__navbar .nav{margin-bottom:1.2rem}.sidebar__footer{padding:1rem 1.25rem;border-top:1px solid hsla(0,0%,100%,.2);justify-content:space-around;display:flex}.sidebar__footer a{align-items:center}.sidebar__footer svg{width:1.375rem;fill:#fff}.nav{list-style:none;padding:0;margin:0}.nav__item{display:block;margin-bottom:2px}.nav__link{font-size:14px;font-size:.875rem;text-decoration:none;display:block;padding:.75rem 1.25rem;border-radius:.3125rem;transition:color .2s ease-in-out,background-color .2s ease-in-out}.nav__link,.nav__link:focus,.nav__link:hover{color:#fff}.nav__link--active,.nav__link:focus,.nav__link:hover{background-color:hsla(0,0%,100%,.2)}.nav__link--active{pointer-events:none}.nav__badge{float:right;position:relative;top:1px;color:#111;background-color:hsla(0,0%,100%,.75);display:inline-block;padding:.25em .4em;font-size:12px;font-size:.75rem;font-weight:700;line-height:1;text-align:center;white-space:nowrap;vertical-align:baseline;border-radius:.25rem}.search{display:none;position:fixed;top:0;right:0;bottom:0;left:0;width:100%;height:100%;z-index:7;background-color:hsla(0,0%,100%,.8)}.search__inner{display:block;max-width:1300px;background-color:#fbfffa;box-shadow:0 1px 14px 0 rgba(144,154,168,.64);margin:30px auto;position:relative;overflow-y:auto}.search__close{position:absolute;right:30px;top:30px;cursor:pointer}.search__container{height:calc(100vh - 180px);padding:30px}.search__group{background:#fff;border-bottom:1px solid rgba(0,0,0,.15);padding:30px;display:block;width:100%}.search__input{border:none;background:none #fff;box-shadow:0 0 14px 0 rgba(144,154,168,.46);line-height:30px;font-size:26px;font-size:1.625rem;text-align:left;padding:15px 30px;margin:0 auto;display:block;max-width:900px;font-weight:300;border-radius:4px;-webkit-appearance:none;appearance:none}.search__list{list-style:none}input#toggleSearch:checked~.search{display:block}.footer{padding-top:30px;padding-bottom:30px;margin-top:30px;border-top:.05rem solid rgba(0,0,0,.1)}.footer small{font-size:10px;font-size:.625rem;font-weight:100;color:lightNavyColor;display:inline-block}.footer .text-left{float:left}.footer .text-right{float:right}.tools__title{font-size:24px;font-size:1.5rem;position:relative}.tools__title,.tools__title:before{font-weight:700;color:#9a9ea4;text-transform:uppercase}.tools__title:before{content:attr(title);position:absolute;pointer-events:none;left:15px;bottom:15px;opacity:.12;font-size:32px;font-size:2rem;line-height:1}.tools__title:after{content:"";display:block;border-radius:5px;background-color:#3a3838;width:30px;height:4px}.toolsCard{margin:.9375rem 0;padding:0 .9375rem;flex:1 1 33.33333333333333%}.toolsCard__inner{width:100%;min-height:339px;border-radius:10px;background-color:#fff;box-shadow:0 0 10px 0 rgba(0,0,0,.05),0 5px 20px 0 rgba(0,0,0,.05);transition:box-shadow .2s ease,transform .2s ease;text-decoration:none;display:block}.toolsCard__inner:focus,.toolsCard__inner:hover{box-shadow:0 10px 30px 0 rgba(0,0,0,.05),0 15px 60px 0 rgba(0,0,0,.05);transform:translate3d(0,-5px,0)}.toolsCard__figure{margin:0;padding:0;position:relative;width:100%;height:150px;overflow:hidden;border-radius:10px 10px 0 0;background-repeat:no-repeat;background-position:50%;background-size:cover}.toolsCard__title{padding:.9375rem 1.875rem .625rem;margin:0;font-size:22px;font-size:1.375rem;font-weight:700;letter-spacing:.2px;color:#3a3838}.toolsCard__desc{padding:0 1.875rem .9375rem;font-size:16px;font-size:1rem;letter-spacing:.1px;color:#9a9ea4;margin:0;display:block;display:-webkit-box;max-width:100%;height:48px;line-height:1.5;-webkit-line-clamp:2;-webkit-box-orient:vertical;overflow:hidden;text-overflow:ellipsis}.toolsCard__footer{padding:.9375rem 1.875rem 1.875rem}.toolsCard__user{display:flex;float:left;align-items:center}.toolsCard__user span{line-height:1}.toolsCard__user img{border-radius:4px;border:1px solid #9a9ea4;margin-right:.625rem}.toolsCard__user small{font-size:13px;font-size:.8125rem;color:#9a9ea4}.toolsCard__user strong{font-size:14px;font-size:.875rem;font-weight:500;color:#333}.toolsCard__user small,.toolsCard__user strong{display:block}.toolsCard__link{float:right}.toolsCard__link svg{display:inline-block;vertical-align:middle;position:relative;top:.625rem;margin:0;padding:0}.tools__list{padding:0;display:flex;flex-flow:row;flex-wrap:wrap;flex-direction:row;align-items:flex-start;justify-content:space-around;margin-right:-.9375rem;margin-left:-.9375rem}@media only screen{.container{max-width:768px}}@media only screen and (min-width:576px){.main{padding:120px 2rem 0}.pagination a,.pagination span{display:block;width:auto}.pagination__prev{float:left;left:0}.pagination__next{float:right;right:0}.pagination__next,.pagination__prev{top:0;position:absolute;z-index:3}.header__navbar{transform:translateZ(0);box-shadow:none}.header__nav{padding:0;float:right}.header__nav-item{display:inline-block}.tools__title:before{font-size:44px;font-size:2.75rem}}@media only screen and (min-width:768px){.main{width:calc(100% - 20rem);padding:120px 6.25rem 0;margin-left:20rem}.toggleMenu{display:none}.toggleSidebar{transition:margin .5s cubic-bezier(.4,2,.68,1);top:5px;margin-left:20rem;transform:rotate(0deg)}input#toggleSidebar:checked~.sidebar{transform:translate3d(-100%,0,0)}input#toggleSidebar:checked~.main,input#toggleSidebar:checked~.main .header{width:100%;margin-left:0}input#toggleSidebar:checked~.toggleSidebar{transform:rotate(180deg);top:0}input#toggleSidebar:checked~.toggleSidebar svg{stroke:#262626}.header{width:calc(100% - 20rem);margin-left:20rem}.sidebar{transform:translateZ(0)}}@media only screen and (min-width:992px){.container{max-width:992px}}@media only screen and (min-width:1200px){.container{max-width:1200px}}
/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL25vZGVfbW9kdWxlcy9ub3JtYWxpemUuY3NzL25vcm1hbGl6ZS5jc3MiLCIuLi8uLi9ub2RlX21vZHVsZXMvamVldC9zdHlsL19ncmlkLnN0eWwiLCJhcHAuY3NzIiwiYmFzZS9faGVscGVycy5zdHlsIiwibGF5b3V0cy90b29scy9fbGlzdC5zdHlsIiwiYmFzZS9fYmFzZS5zdHlsIiwiLi4vLi4vbm9kZV9tb2R1bGVzL3J1cHR1cmUvcnVwdHVyZS9pbmRleC5zdHlsIiwiYmFzZS9fdHlwb2dyYXBoeS5zdHlsIiwibWl4aW5zLnN0eWwiLCJiYXNlL19ncmlkLnN0eWwiLCJjb21wb25lbnRzL19idXR0b25zLnN0eWwiLCJjb21wb25lbnRzL19wYWdpbmF0aW9uLnN0eWwiLCJsYXlvdXRzL2NvbW1vbi9faGVhZGVyLnN0eWwiLCJsYXlvdXRzL2NvbW1vbi9fc2lkZWJhci5zdHlsIiwibGF5b3V0cy9jb21tb24vX25hdi5zdHlsIiwibGF5b3V0cy9jb21tb24vX3NlYXJjaC5zdHlsIiwibGF5b3V0cy9jb21tb24vX2Zvb3Rlci5zdHlsIiwibGF5b3V0cy90b29scy9fdGl0bGUuc3R5bCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSw0RUFBQSxBQUtBLEtBQ0MsaUJBQUEsQUFFQSwwQkFBQSxBQUVELDZCQUFBLENBRUUsQUFHRixLQUNBLFFBQUEsQ0FDQSxBQUVBLHdDQUNBLGFBQUEsQ0FDQyxBQUdELEdBQ0UsY0FBQSxBQUNGLGNBQUEsQ0FDQSxBQUlBLHVCQUVBLGFBQUEsQ0FDQSxBQUVBLE9BQ0EsZUFBQSxDQUNFLEFBR0YsR0FDQyx1QkFBQSxBQUVBLFNBQUEsQUFFRCxnQkFBQSxDQUVFLEFBR0YsSUFDRyxnQ0FBQSxBQUVILGFBQUEsQ0FFQyxBQUlELEVBQ0EsNkJBQUEsQUFFQSxvQ0FBQSxDQUVBLEFBR0EsWUFDQSxtQkFBQSxBQUVBLDBCQUFBLEFBRUEsZ0NBQUEsQ0FFQyxBQUVELFNBQ0Esb0JBQUEsQUFJQSxrQkFBQSxDQUhFLEFB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LENBQ0EsQUFFQSw0RUFDQSxXQUFXLEFiNG1DWCxhQUFlLENhMW1DakIsQWI2bUNBLDJDYXhtQ0UseUJBQUEsQUFDRSxLQUFRLENiMG1DWCxBY2pxQ0QsK0NBQ0EsY0FBZSxDQUNmLEFkcXFDQSxRY2xxQ0EseUJBQUEsQVJMQSxpQkFBQSxDQUNBLEFRT0UsU0FDQSx1QkFBQSxDZHFxQ0QsQ2NwcUNELEFkdXFDRix5Q2NycUNFLFdBQ0UsZUFBQSxDZHVxQ0QsQ2VyckNILEFmd3JDQSwwQ2V0ckNFLFdBQ0EsZ0JBQUEsQ0FDQSxDZndyQ0QiLCJmaWxlIjoiYnVuZGxlLmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi8qISBub3JtYWxpemUuY3NzIHY3LjAuMCB8IE1JVCBMaWNlbnNlIHwgZ2l0aHViLmNvbS9uZWNvbGFzL25vcm1hbGl6ZS5jc3MgKi9cblxuLyogRG9jdW1lbnRcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qKlxuICogMS4gQ29ycmVjdCB0aGUgbGluZSBoZWlnaHQgaW4gYWxsIGJyb3dzZXJzLlxuICogMi4gUHJldmVudCBhZGp1c3RtZW50cyBvZiBmb250IHNpemUgYWZ0ZXIgb3JpZW50YXRpb24gY2hhbmdlcyBpblxuICogICAgSUUgb24gV2luZG93cyBQaG9uZSBhbmQgaW4gaU9TLlxuICovXG5cbmh0bWwge1xuICBsaW5lLWhlaWdodDogMS4xNTsgLyogMSAqL1xuICAtbXMtdGV4dC1zaXplLWFkanVzdDogMTAwJTsgLyogMiAqL1xuICAtd2Via2l0LXRleHQtc2l6ZS1hZGp1c3Q6IDEwMCU7IC8qIDIgKi9cbn1cblxuLyogU2VjdGlvbnNcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qKlxuICogUmVtb3ZlIHRoZSBtYXJnaW4gaW4gYWxsIGJyb3dzZXJzIChvcGluaW9uYXRlZCkuXG4gKi9cblxuYm9keSB7XG4gIG1hcmdpbjogMDtcbn1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBJRSA5LS5cbiAqL1xuXG5hcnRpY2xlLFxuYXNpZGUsXG5mb290ZXIsXG5oZWFkZXIsXG5uYXYsXG5zZWN0aW9uIHtcbiAgZGlzcGxheTogYmxvY2s7XG59XG5cbi8qKlxuICogQ29ycmVjdCB0aGUgZm9udCBzaXplIGFuZCBtYXJnaW4gb24gYGgxYCBlbGVtZW50cyB3aXRoaW4gYHNlY3Rpb25gIGFuZFxuICogYGFydGljbGVgIGNvbnRleHRzIGluIENocm9tZSwgRmlyZWZveCwgYW5kIFNhZmFyaS5cbiAqL1xuXG5oMSB7XG4gIGZvbnQtc2l6ZTogMmVtO1xuICBtYXJnaW46IDAuNjdlbSAwO1xufVxuXG4vKiBHcm91cGluZyBjb250ZW50XG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFIDktLlxuICogMS4gQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gSUUuXG4gKi9cblxuZmlnY2FwdGlvbixcbmZpZ3VyZSxcbm1haW4geyAvKiAxICovXG4gIGRpc3BsYXk6IGJsb2NrO1xufVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBtYXJnaW4gaW4gSUUgOC5cbiAqL1xuXG5maWd1cmUge1xuICBtYXJnaW46IDFlbSA0MHB4O1xufVxuXG4vKipcbiAqIDEuIEFkZCB0aGUgY29ycmVjdCBib3ggc2l6aW5nIGluIEZpcmVmb3guXG4gKiAyLiBTaG93IHRoZSBvdmVyZmxvdyBpbiBFZGdlIGFuZCBJRS5cbiAqL1xuXG5ociB7XG4gIGJveC1zaXppbmc6IGNvbnRlbnQtYm94OyAvKiAxICovXG4gIGhlaWdodDogMDsgLyogMSAqL1xuICBvdmVyZmxvdzogdmlzaWJsZTsgLyogMiAqL1xufVxuXG4vKipcbiAqIDEuIENvcnJlY3QgdGhlIGluaGVyaXRhbmNlIGFuZCBzY2FsaW5nIG9mIGZvbnQgc2l6ZSBpbiBhbGwgYnJvd3NlcnMuXG4gKiAyLiBDb3JyZWN0IHRoZSBvZGQgYGVtYCBmb250IHNpemluZyBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cblxucHJlIHtcbiAgZm9udC1mYW1pbHk6IG1vbm9zcGFjZSwgbW9ub3NwYWNlOyAvKiAxICovXG4gIGZvbnQtc2l6ZTogMWVtOyAvKiAyICovXG59XG5cbi8qIFRleHQtbGV2ZWwgc2VtYW50aWNzXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIDEuIFJlbW92ZSB0aGUgZ3JheSBiYWNrZ3JvdW5kIG9uIGFjdGl2ZSBsaW5rcyBpbiBJRSAxMC5cbiAqIDIuIFJlbW92ZSBnYXBzIGluIGxpbmtzIHVuZGVybGluZSBpbiBpT1MgOCsgYW5kIFNhZmFyaSA4Ky5cbiAqL1xuXG5hIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7IC8qIDEgKi9cbiAgLXdlYmtpdC10ZXh0LWRlY29yYXRpb24tc2tpcDogb2JqZWN0czsgLyogMiAqL1xufVxuXG4vKipcbiAqIDEuIFJlbW92ZSB0aGUgYm90dG9tIGJvcmRlciBpbiBDaHJvbWUgNTctIGFuZCBGaXJlZm94IDM5LS5cbiAqIDIuIEFkZCB0aGUgY29ycmVjdCB0ZXh0IGRlY29yYXRpb24gaW4gQ2hyb21lLCBFZGdlLCBJRSwgT3BlcmEsIGFuZCBTYWZhcmkuXG4gKi9cblxuYWJiclt0aXRsZV0ge1xuICBib3JkZXItYm90dG9tOiBub25lOyAvKiAxICovXG4gIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lOyAvKiAyICovXG4gIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lIGRvdHRlZDsgLyogMiAqL1xufVxuXG4vKipcbiAqIFByZXZlbnQgdGhlIGR1cGxpY2F0ZSBhcHBsaWNhdGlvbiBvZiBgYm9sZGVyYCBieSB0aGUgbmV4dCBydWxlIGluIFNhZmFyaSA2LlxuICovXG5cbmIsXG5zdHJvbmcge1xuICBmb250LXdlaWdodDogaW5oZXJpdDtcbn1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZm9udCB3ZWlnaHQgaW4gQ2hyb21lLCBFZGdlLCBhbmQgU2FmYXJpLlxuICovXG5cbmIsXG5zdHJvbmcge1xuICBmb250LXdlaWdodDogYm9sZGVyO1xufVxuXG4vKipcbiAqIDEuIENvcnJlY3QgdGhlIGluaGVyaXRhbmNlIGFuZCBzY2FsaW5nIG9mIGZvbnQgc2l6ZSBpbiBhbGwgYnJvd3NlcnMuXG4gKiAyLiBDb3JyZWN0IHRoZSBvZGQgYGVtYCBmb250IHNpemluZyBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cblxuY29kZSxcbmtiZCxcbnNhbXAge1xuICBmb250LWZhbWlseTogbW9ub3NwYWNlLCBtb25vc3BhY2U7IC8qIDEgKi9cbiAgZm9udC1zaXplOiAxZW07IC8qIDIgKi9cbn1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZm9udCBzdHlsZSBpbiBBbmRyb2lkIDQuMy0uXG4gKi9cblxuZGZuIHtcbiAgZm9udC1zdHlsZTogaXRhbGljO1xufVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBiYWNrZ3JvdW5kIGFuZCBjb2xvciBpbiBJRSA5LS5cbiAqL1xuXG5tYXJrIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmMDtcbiAgY29sb3I6ICMwMDA7XG59XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGZvbnQgc2l6ZSBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cblxuc21hbGwge1xuICBmb250LXNpemU6IDgwJTtcbn1cblxuLyoqXG4gKiBQcmV2ZW50IGBzdWJgIGFuZCBgc3VwYCBlbGVtZW50cyBmcm9tIGFmZmVjdGluZyB0aGUgbGluZSBoZWlnaHQgaW5cbiAqIGFsbCBicm93c2Vycy5cbiAqL1xuXG5zdWIsXG5zdXAge1xuICBmb250LXNpemU6IDc1JTtcbiAgbGluZS1oZWlnaHQ6IDA7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgdmVydGljYWwtYWxpZ246IGJhc2VsaW5lO1xufVxuXG5zdWIge1xuICBib3R0b206IC0wLjI1ZW07XG59XG5cbnN1cCB7XG4gIHRvcDogLTAuNWVtO1xufVxuXG4vKiBFbWJlZGRlZCBjb250ZW50XG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFIDktLlxuICovXG5cbmF1ZGlvLFxudmlkZW8ge1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG59XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gaU9TIDQtNy5cbiAqL1xuXG5hdWRpbzpub3QoW2NvbnRyb2xzXSkge1xuICBkaXNwbGF5OiBub25lO1xuICBoZWlnaHQ6IDA7XG59XG5cbi8qKlxuICogUmVtb3ZlIHRoZSBib3JkZXIgb24gaW1hZ2VzIGluc2lkZSBsaW5rcyBpbiBJRSAxMC0uXG4gKi9cblxuaW1nIHtcbiAgYm9yZGVyLXN0eWxlOiBub25lO1xufVxuXG4vKipcbiAqIEhpZGUgdGhlIG92ZXJmbG93IGluIElFLlxuICovXG5cbnN2Zzpub3QoOnJvb3QpIHtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbn1cblxuLyogRm9ybXNcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qKlxuICogMS4gQ2hhbmdlIHRoZSBmb250IHN0eWxlcyBpbiBhbGwgYnJvd3NlcnMgKG9waW5pb25hdGVkKS5cbiAqIDIuIFJlbW92ZSB0aGUgbWFyZ2luIGluIEZpcmVmb3ggYW5kIFNhZmFyaS5cbiAqL1xuXG5idXR0b24sXG5pbnB1dCxcbm9wdGdyb3VwLFxuc2VsZWN0LFxudGV4dGFyZWEge1xuICBmb250LWZhbWlseTogc2Fucy1zZXJpZjsgLyogMSAqL1xuICBmb250LXNpemU6IDEwMCU7IC8qIDEgKi9cbiAgbGluZS1oZWlnaHQ6IDEuMTU7IC8qIDEgKi9cbiAgbWFyZ2luOiAwOyAvKiAyICovXG59XG5cbi8qKlxuICogU2hvdyB0aGUgb3ZlcmZsb3cgaW4gSUUuXG4gKiAxLiBTaG93IHRoZSBvdmVyZmxvdyBpbiBFZGdlLlxuICovXG5cbmJ1dHRvbixcbmlucHV0IHsgLyogMSAqL1xuICBvdmVyZmxvdzogdmlzaWJsZTtcbn1cblxuLyoqXG4gKiBSZW1vdmUgdGhlIGluaGVyaXRhbmNlIG9mIHRleHQgdHJhbnNmb3JtIGluIEVkZ2UsIEZpcmVmb3gsIGFuZCBJRS5cbiAqIDEuIFJlbW92ZSB0aGUgaW5oZXJpdGFuY2Ugb2YgdGV4dCB0cmFuc2Zvcm0gaW4gRmlyZWZveC5cbiAqL1xuXG5idXR0b24sXG5zZWxlY3QgeyAvKiAxICovXG4gIHRleHQtdHJhbnNmb3JtOiBub25lO1xufVxuXG4vKipcbiAqIDEuIFByZXZlbnQgYSBXZWJLaXQgYnVnIHdoZXJlICgyKSBkZXN0cm95cyBuYXRpdmUgYGF1ZGlvYCBhbmQgYHZpZGVvYFxuICogICAgY29udHJvbHMgaW4gQW5kcm9pZCA0LlxuICogMi4gQ29ycmVjdCB0aGUgaW5hYmlsaXR5IHRvIHN0eWxlIGNsaWNrYWJsZSB0eXBlcyBpbiBpT1MgYW5kIFNhZmFyaS5cbiAqL1xuXG5idXR0b24sXG5odG1sIFt0eXBlPVwiYnV0dG9uXCJdLCAvKiAxICovXG5bdHlwZT1cInJlc2V0XCJdLFxuW3R5cGU9XCJzdWJtaXRcIl0ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IGJ1dHRvbjsgLyogMiAqL1xufVxuXG4vKipcbiAqIFJlbW92ZSB0aGUgaW5uZXIgYm9yZGVyIGFuZCBwYWRkaW5nIGluIEZpcmVmb3guXG4gKi9cblxuYnV0dG9uOjotbW96LWZvY3VzLWlubmVyLFxuW3R5cGU9XCJidXR0b25cIl06Oi1tb3otZm9jdXMtaW5uZXIsXG5bdHlwZT1cInJlc2V0XCJdOjotbW96LWZvY3VzLWlubmVyLFxuW3R5cGU9XCJzdWJtaXRcIl06Oi1tb3otZm9jdXMtaW5uZXIge1xuICBib3JkZXItc3R5bGU6IG5vbmU7XG4gIHBhZGRpbmc6IDA7XG59XG5cbi8qKlxuICogUmVzdG9yZSB0aGUgZm9jdXMgc3R5bGVzIHVuc2V0IGJ5IHRoZSBwcmV2aW91cyBydWxlLlxuICovXG5cbmJ1dHRvbjotbW96LWZvY3VzcmluZyxcblt0eXBlPVwiYnV0dG9uXCJdOi1tb3otZm9jdXNyaW5nLFxuW3R5cGU9XCJyZXNldFwiXTotbW96LWZvY3VzcmluZyxcblt0eXBlPVwic3VibWl0XCJdOi1tb3otZm9jdXNyaW5nIHtcbiAgb3V0bGluZTogMXB4IGRvdHRlZCBCdXR0b25UZXh0O1xufVxuXG4vKipcbiAqIENvcnJlY3QgdGhlIHBhZGRpbmcgaW4gRmlyZWZveC5cbiAqL1xuXG5maWVsZHNldCB7XG4gIHBhZGRpbmc6IDAuMzVlbSAwLjc1ZW0gMC42MjVlbTtcbn1cblxuLyoqXG4gKiAxLiBDb3JyZWN0IHRoZSB0ZXh0IHdyYXBwaW5nIGluIEVkZ2UgYW5kIElFLlxuICogMi4gQ29ycmVjdCB0aGUgY29sb3IgaW5oZXJpdGFuY2UgZnJvbSBgZmllbGRzZXRgIGVsZW1lbnRzIGluIElFLlxuICogMy4gUmVtb3ZlIHRoZSBwYWRkaW5nIHNvIGRldmVsb3BlcnMgYXJlIG5vdCBjYXVnaHQgb3V0IHdoZW4gdGhleSB6ZXJvIG91dFxuICogICAgYGZpZWxkc2V0YCBlbGVtZW50cyBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cblxubGVnZW5kIHtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDsgLyogMSAqL1xuICBjb2xvcjogaW5oZXJpdDsgLyogMiAqL1xuICBkaXNwbGF5OiB0YWJsZTsgLyogMSAqL1xuICBtYXgtd2lkdGg6IDEwMCU7IC8qIDEgKi9cbiAgcGFkZGluZzogMDsgLyogMyAqL1xuICB3aGl0ZS1zcGFjZTogbm9ybWFsOyAvKiAxICovXG59XG5cbi8qKlxuICogMS4gQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gSUUgOS0uXG4gKiAyLiBBZGQgdGhlIGNvcnJlY3QgdmVydGljYWwgYWxpZ25tZW50IGluIENocm9tZSwgRmlyZWZveCwgYW5kIE9wZXJhLlxuICovXG5cbnByb2dyZXNzIHtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrOyAvKiAxICovXG4gIHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTsgLyogMiAqL1xufVxuXG4vKipcbiAqIFJlbW92ZSB0aGUgZGVmYXVsdCB2ZXJ0aWNhbCBzY3JvbGxiYXIgaW4gSUUuXG4gKi9cblxudGV4dGFyZWEge1xuICBvdmVyZmxvdzogYXV0bztcbn1cblxuLyoqXG4gKiAxLiBBZGQgdGhlIGNvcnJlY3QgYm94IHNpemluZyBpbiBJRSAxMC0uXG4gKiAyLiBSZW1vdmUgdGhlIHBhZGRpbmcgaW4gSUUgMTAtLlxuICovXG5cblt0eXBlPVwiY2hlY2tib3hcIl0sXG5bdHlwZT1cInJhZGlvXCJdIHtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDsgLyogMSAqL1xuICBwYWRkaW5nOiAwOyAvKiAyICovXG59XG5cbi8qKlxuICogQ29ycmVjdCB0aGUgY3Vyc29yIHN0eWxlIG9mIGluY3JlbWVudCBhbmQgZGVjcmVtZW50IGJ1dHRvbnMgaW4gQ2hyb21lLlxuICovXG5cblt0eXBlPVwibnVtYmVyXCJdOjotd2Via2l0LWlubmVyLXNwaW4tYnV0dG9uLFxuW3R5cGU9XCJudW1iZXJcIl06Oi13ZWJraXQtb3V0ZXItc3Bpbi1idXR0b24ge1xuICBoZWlnaHQ6IGF1dG87XG59XG5cbi8qKlxuICogMS4gQ29ycmVjdCB0aGUgb2RkIGFwcGVhcmFuY2UgaW4gQ2hyb21lIGFuZCBTYWZhcmkuXG4gKiAyLiBDb3JyZWN0IHRoZSBvdXRsaW5lIHN0eWxlIGluIFNhZmFyaS5cbiAqL1xuXG5bdHlwZT1cInNlYXJjaFwiXSB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogdGV4dGZpZWxkOyAvKiAxICovXG4gIG91dGxpbmUtb2Zmc2V0OiAtMnB4OyAvKiAyICovXG59XG5cbi8qKlxuICogUmVtb3ZlIHRoZSBpbm5lciBwYWRkaW5nIGFuZCBjYW5jZWwgYnV0dG9ucyBpbiBDaHJvbWUgYW5kIFNhZmFyaSBvbiBtYWNPUy5cbiAqL1xuXG5bdHlwZT1cInNlYXJjaFwiXTo6LXdlYmtpdC1zZWFyY2gtY2FuY2VsLWJ1dHRvbixcblt0eXBlPVwic2VhcmNoXCJdOjotd2Via2l0LXNlYXJjaC1kZWNvcmF0aW9uIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBub25lO1xufVxuXG4vKipcbiAqIDEuIENvcnJlY3QgdGhlIGluYWJpbGl0eSB0byBzdHlsZSBjbGlja2FibGUgdHlwZXMgaW4gaU9TIGFuZCBTYWZhcmkuXG4gKiAyLiBDaGFuZ2UgZm9udCBwcm9wZXJ0aWVzIHRvIGBpbmhlcml0YCBpbiBTYWZhcmkuXG4gKi9cblxuOjotd2Via2l0LWZpbGUtdXBsb2FkLWJ1dHRvbiB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogYnV0dG9uOyAvKiAxICovXG4gIGZvbnQ6IGluaGVyaXQ7IC8qIDIgKi9cbn1cblxuLyogSW50ZXJhY3RpdmVcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBJRSA5LS5cbiAqIDEuIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIEVkZ2UsIElFLCBhbmQgRmlyZWZveC5cbiAqL1xuXG5kZXRhaWxzLCAvKiAxICovXG5tZW51IHtcbiAgZGlzcGxheTogYmxvY2s7XG59XG5cbi8qXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cblxuc3VtbWFyeSB7XG4gIGRpc3BsYXk6IGxpc3QtaXRlbTtcbn1cblxuLyogU2NyaXB0aW5nXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFIDktLlxuICovXG5cbmNhbnZhcyB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbn1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBJRS5cbiAqL1xuXG50ZW1wbGF0ZSB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG5cbi8qIEhpZGRlblxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBJRSAxMC0uXG4gKi9cblxuW2hpZGRlbl0ge1xuICBkaXNwbGF5OiBub25lO1xufVxuIiwiY29sdW1uKCRyYXRpb3MgPSAxLCAkb2Zmc2V0ID0gMCwgJGN5Y2xlID0gMCwgJGd1dHRlciA9ICRqZWV0Lmd1dHRlciwgJGNsZWFyZml4ID0gdHJ1ZSwgJG50aCA9ICRqZWV0Lm50aClcclxuICBzaWRlID0gX2dldC1sYXlvdXQtZGlyZWN0aW9uKClcclxuICBvcHBvc2l0ZS1zaWRlID0gb3Bwb3NpdGUtcG9zaXRpb24oc2lkZSlcclxuICBjb2x1bW4td2lkdGhzID0gX2dldC1jb2x1bW4oJHJhdGlvcywgJGd1dHRlcilcclxuICBtYXJnaW4tbGFzdCA9IDBcclxuICBtYXJnaW4tbCA9IG1hcmdpbi1sYXN0XHJcbiAgbWFyZ2luLXIgPSBjb2x1bW4td2lkdGhzWzFdXHJcbiAgJG50aC1zZWxlY3RvciA9IFwibnRoLWNoaWxkXCJcclxuICBpZiAkbnRoIGlzIFwidHlwZVwiXHJcbiAgICAkbnRoLXNlbGVjdG9yID0gXCJudGgtb2YtdHlwZVwiXHJcblxyXG4gIHVubGVzcyAkb2Zmc2V0ID09IDBcclxuICAgIGlmICRvZmZzZXQgPCAwXHJcbiAgICAgICRvZmZzZXQgKj0gLTFcclxuICAgICAgJG9mZnNldCA9IF9nZXQtY29sdW1uKCRvZmZzZXQsIGNvbHVtbi13aWR0aHNbMV0pWzBdXHJcbiAgICAgIG1hcmdpbi1yID0gbWFyZ2luLWxhc3QgPSAkb2Zmc2V0ICsgY29sdW1uLXdpZHRoc1sxXSAqIDJcclxuICAgIGVsc2VcclxuICAgICAgJG9mZnNldCA9IF9nZXQtY29sdW1uKCRvZmZzZXQsIGNvbHVtbi13aWR0aHNbMV0pWzBdXHJcbiAgICAgIG1hcmdpbi1sID0gJG9mZnNldCArIGNvbHVtbi13aWR0aHNbMV1cclxuXHJcbiAgaWYgJGNsZWFyZml4XHJcbiAgICBjbGVhcmZpeCgpXHJcblxyXG4gIGZsb2F0OiBzaWRlXHJcbiAgY2xlYXI6IG5vbmVcclxuICB0ZXh0LWFsaWduOiBpbmhlcml0XHJcbiAgd2lkdGg6IChjb2x1bW4td2lkdGhzWzBdKSVcclxuICBtYXJnaW4te3NpZGV9OiAobWFyZ2luLWwpJVxyXG4gIG1hcmdpbi17b3Bwb3NpdGUtc2lkZX06IChtYXJnaW4tciklXHJcblxyXG4gIGlmICRjeWNsZSAhPSAwXHJcbiAgICAmOnskbnRoLXNlbGVjdG9yfShuKVxyXG4gICAgICBtYXJnaW4te29wcG9zaXRlLXNpZGV9OiAobWFyZ2luLXIpJVxyXG4gICAgICBmbG9hdDogc2lkZVxyXG4gICAgICBjbGVhcjogbm9uZVxyXG5cclxuICAgICY6eyRudGgtc2VsZWN0b3J9KHskY3ljbGV9bilcclxuICAgICAgbWFyZ2luLXtvcHBvc2l0ZS1zaWRlfTogKG1hcmdpbi1sYXN0KSVcclxuICAgICAgZmxvYXQ6IG9wcG9zaXRlLXNpZGVcclxuXHJcbiAgICAmOnskbnRoLXNlbGVjdG9yfSh7JGN5Y2xlfW4gKyAxKVxyXG4gICAgICBjbGVhcjogYm90aFxyXG4gIGVsc2VcclxuICAgICY6bGFzdC1jaGlsZFxyXG4gICAgICBtYXJnaW4te29wcG9zaXRlLXNpZGV9OiAobWFyZ2luLWxhc3QpJVxyXG5cclxuXHJcbmNvbHVtbi13aWR0aCgkcmF0aW9zID0gMSwgJGd1dHRlciA9ICRqZWV0Lmd1dHRlcilcclxuICAkcmF0aW9zID0gX3JldmVyc2UoJHJhdGlvcykgdW5sZXNzICRqZWV0LnBhcmVudC1maXJzdCBpcyB0cnVlXHJcbiAgdyA9IDEwMFxyXG5cclxuICBmb3IgcmF0aW8gaW4gJHJhdGlvc1xyXG4gICAgdyA9IDEwMCAqIHJhdGlvIC0gJGd1dHRlciArIHJhdGlvICogJGd1dHRlclxyXG5cclxuICByZXR1cm4gdyArICclJ1xyXG5cclxuXHJcbmNvbHVtbi1ndXR0ZXIoJHJhdGlvcyA9IDEsICRndXR0ZXIgPSAkamVldC5ndXR0ZXIpXHJcbiAgJHJhdGlvcyA9IF9yZXZlcnNlKCRyYXRpb3MpIHVubGVzcyAkamVldC5wYXJlbnQtZmlyc3QgaXMgdHJ1ZVxyXG4gIHcgPSAxMDBcclxuXHJcbiAgZm9yIHJhdGlvIGluICRyYXRpb3NcclxuICAgICRndXR0ZXIgPSAkZ3V0dGVyIC8gdyAqIDEwMFxyXG5cclxuICByZXR1cm4gJGd1dHRlciArICclJ1xyXG5cclxuXHJcbnNwYW4oJHJhdGlvID0gMSwgJG9mZnNldCA9IDAsICRjeWNsZSA9IDAsICRjbGVhcmZpeCA9IHRydWUsICRudGggPSAkamVldC5udGgpXHJcbiAgc2lkZSA9IF9nZXQtbGF5b3V0LWRpcmVjdGlvbigpXHJcbiAgb3Bwb3NpdGUtc2lkZSA9IG9wcG9zaXRlLXBvc2l0aW9uKHNpZGUpXHJcbiAgc3Bhbi13aWR0aCA9IF9nZXQtc3BhbigkcmF0aW8pXHJcbiAgbWFyZ2luLXIgPSAwXHJcbiAgbWFyZ2luLWwgPSBtYXJnaW4tclxyXG4gICRudGgtc2VsZWN0b3IgPSBcIm50aC1jaGlsZFwiXHJcbiAgaWYgJG50aCBpcyBcInR5cGVcIlxyXG4gICAgJG50aC1zZWxlY3RvciA9IFwibnRoLW9mLXR5cGVcIlxyXG5cclxuXHJcbiAgdW5sZXNzICRvZmZzZXQgPT0gMFxyXG4gICAgaWYgJG9mZnNldCA8IDBcclxuICAgICAgJG9mZnNldCAqPSAtMVxyXG4gICAgICBtYXJnaW4tciA9IF9nZXQtc3Bhbigkb2Zmc2V0KVxyXG4gICAgZWxzZVxyXG4gICAgICBtYXJnaW4tbCA9IF9nZXQtc3Bhbigkb2Zmc2V0KVxyXG5cclxuICBpZiAkY2xlYXJmaXhcclxuICAgIGNsZWFyZml4KClcclxuXHJcbiAgZmxvYXQ6IHNpZGVcclxuICBjbGVhcjogbm9uZVxyXG4gIHRleHQtYWxpZ246IGluaGVyaXRcclxuICB3aWR0aDogKHNwYW4td2lkdGgpJVxyXG4gIG1hcmdpbi17c2lkZX06IChtYXJnaW4tbCklXHJcbiAgbWFyZ2luLXtvcHBvc2l0ZS1zaWRlfTogKG1hcmdpbi1yKSVcclxuXHJcbiAgaWYgJGN5Y2xlICE9IDBcclxuICAgICY6eyRudGgtc2VsZWN0b3J9KG4pXHJcbiAgICAgIGZsb2F0OiBzaWRlXHJcbiAgICAgIGNsZWFyOiBub25lXHJcblxyXG4gICAgJjp7JG50aC1zZWxlY3Rvcn0oeyRjeWNsZX1uKVxyXG4gICAgICBmbG9hdDogb3Bwb3NpdGUtc2lkZVxyXG5cclxuICAgICY6eyRudGgtc2VsZWN0b3J9KHskY3ljbGV9biArIDEpXHJcbiAgICAgIGNsZWFyOiBib3RoXHJcblxyXG5cclxubW92ZSgkcmF0aW9zID0gMCwgJGNvbC1vci1zcGFuID0gY29sdW1uLCAkZ3V0dGVyID0gJGplZXQuZ3V0dGVyKVxyXG4gIHRyYW5zbGF0ZSA9ICcnXHJcbiAgc2lkZSA9IF9nZXQtbGF5b3V0LWRpcmVjdGlvbigpXHJcblxyXG4gIGlmIHNpZGUgPT0gcmlnaHRcclxuICAgICRyYXRpb3MgPSBfcmVwbGFjZS1udGgoJHJhdGlvcywgMCwgJHJhdGlvc1swXSAqIC0xKVxyXG5cclxuICBpZiAkY29sLW9yLXNwYW4gPT0gY29sdW1uIG9yICRjb2wtb3Itc3BhbiA9PSBjb2wgb3IgJGNvbC1vci1zcGFuID09IGNcclxuICAgIGNvbHVtbi13aWR0aHMgPSBfZ2V0LWNvbHVtbigkcmF0aW9zLCAkZ3V0dGVyKVxyXG4gICAgdHJhbnNsYXRlID0gY29sdW1uLXdpZHRoc1swXSArIGNvbHVtbi13aWR0aHNbMV1cclxuICBlbHNlXHJcbiAgICB0cmFuc2xhdGUgPSBfZ2V0LXNwYW4oJHJhdGlvcylcclxuXHJcbiAgcG9zaXRpb246IHJlbGF0aXZlXHJcbiAgbGVmdDogKHRyYW5zbGF0ZSklXHJcblxyXG5cclxudW5tb3ZlKClcclxuICBwb3NpdGlvbjogc3RhdGljXHJcbiAgbGVmdDogMFxyXG5cclxuXHJcbmRlYnVnKCRjb2xvciA9IGJsdWUsICRpbXBvcnRhbnQgPSBmYWxzZSlcclxuICBpZiAkaW1wb3J0YW50XHJcbiAgICAqXHJcbiAgICAgIGJhY2tncm91bmQ6IHJnYmEoJGNvbG9yLCA1JSkgIWltcG9ydGFudFxyXG4gIGVsc2VcclxuICAgICpcclxuICAgICAgYmFja2dyb3VuZDogcmdiYSgkY29sb3IsIDUlKVxyXG5cclxuXHJcbmNlbnRlcigkbWF4LXdpZHRoID0gJGplZXQubWF4LXdpZHRoLCAkcGFkID0gMClcclxuICBjbGVhcmZpeCgpXHJcbiAgd2lkdGg6IGF1dG9cclxuICBtYXgtd2lkdGg6ICRtYXgtd2lkdGhcclxuICBmbG9hdDogbm9uZVxyXG4gIGRpc3BsYXk6IHVucXVvdGUoJ2Jsb2NrJylcclxuICBtYXJnaW4tcmlnaHQ6IGF1dG9cclxuICBtYXJnaW4tbGVmdDogYXV0b1xyXG4gIHBhZGRpbmctbGVmdDogJHBhZFxyXG4gIHBhZGRpbmctcmlnaHQ6ICRwYWRcclxuXHJcblxyXG51bmNlbnRlcigpXHJcbiAgbWF4LXdpZHRoOiBub25lXHJcbiAgbWFyZ2luLXJpZ2h0OiAwXHJcbiAgbWFyZ2luLWxlZnQ6IDBcclxuICBwYWRkaW5nLWxlZnQ6IDBcclxuICBwYWRkaW5nLXJpZ2h0OiAwXHJcblxyXG5cclxuc3RhY2soJHBhZCA9IDAsICRhbGlnbiA9IGZhbHNlKVxyXG4gIHNpZGUgPSBfZ2V0LWxheW91dC1kaXJlY3Rpb24oKVxyXG4gIG9wcG9zaXRlLXNpZGUgPSBvcHBvc2l0ZS1wb3NpdGlvbihzaWRlKVxyXG5cclxuICBkaXNwbGF5OiB1bnF1b3RlKCdibG9jaycpXHJcbiAgY2xlYXI6IGJvdGhcclxuICBmbG9hdDogbm9uZVxyXG4gIHdpZHRoOiAxMDAlXHJcbiAgbWFyZ2luLWxlZnQ6IGF1dG9cclxuICBtYXJnaW4tcmlnaHQ6IGF1dG9cclxuXHJcbiAgJjpmaXJzdC1jaGlsZFxyXG4gICAgbWFyZ2luLXtzaWRlfTogYXV0b1xyXG5cclxuICAmOmxhc3QtY2hpbGRcclxuICAgIG1hcmdpbi17b3Bwb3NpdGUtc2lkZX06IGF1dG9cclxuXHJcbiAgaWYgJHBhZCAhPSAwXHJcbiAgICBwYWRkaW5nLWxlZnQ6ICRwYWRcclxuICAgIHBhZGRpbmctcmlnaHQ6ICRwYWRcclxuXHJcbiAgaWYgKCRhbGlnbiBpcyBub3QgZmFsc2UpXHJcbiAgICBpZiAoJGFsaWduID09IGNlbnRlcikgb3IgKCRhbGlnbiA9PSBjKVxyXG4gICAgICB0ZXh0LWFsaWduOiBjZW50ZXJcclxuICAgIGlmICgkYWxpZ24gPT0gbGVmdCkgb3IgKCRhbGlnbiA9PSBsKVxyXG4gICAgICB0ZXh0LWFsaWduOiBsZWZ0XHJcbiAgICBpZiAoJGFsaWduID09IHJpZ2h0KSBvciAoJGFsaWduID09IHIpXHJcbiAgICAgIHRleHQtYWxpZ246IHJpZ2h0XHJcblxyXG5cclxudW5zdGFjaygpXHJcbiAgc2lkZSA9IF9nZXQtbGF5b3V0LWRpcmVjdGlvbigpXHJcbiAgb3Bwb3NpdGUtc2lkZSA9IG9wcG9zaXRlLXBvc2l0aW9uKHNpZGUpXHJcblxyXG4gIHRleHQtYWxpZ246IHNpZGVcclxuICBkaXNwbGF5OiBpbmxpbmVcclxuICBjbGVhcjogbm9uZVxyXG4gIHdpZHRoOiBhdXRvXHJcbiAgbWFyZ2luLWxlZnQ6IDBcclxuICBtYXJnaW4tcmlnaHQ6IDBcclxuXHJcbiAgJjpmaXJzdC1jaGlsZFxyXG4gICAgbWFyZ2luLXtzaWRlfTogMFxyXG5cclxuICAmOmxhc3QtY2hpbGRcclxuICAgIG1hcmdpbi17b3Bwb3NpdGUtc2lkZX06IDBcclxuXHJcblxyXG5hbGlnbigkZGlyZWN0aW9uID0gYm90aClcclxuICBwb3NpdGlvbjogYWJzb2x1dGVcclxuICB0cmFuc2Zvcm0tc3R5bGU6IHByZXNlcnZlLTNkXHJcblxyXG4gIGlmICgkZGlyZWN0aW9uID09IGhvcml6b250YWwpIG9yICgkZGlyZWN0aW9uID09IGgpXHJcbiAgICBsZWZ0OiA1MCVcclxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtNTAlKVxyXG4gIGVsc2UgaWYgKCRkaXJlY3Rpb24gPT0gdmVydGljYWwpIG9yICgkZGlyZWN0aW9uID09IHYpXHJcbiAgICB0b3A6IDUwJVxyXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC01MCUpXHJcbiAgZWxzZVxyXG4gICAgdG9wOiA1MCVcclxuICAgIGxlZnQ6IDUwJVxyXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwgLTUwJSlcclxuXHJcblxyXG5jbGVhcmZpeCgpXHJcbiAgJjo6YWZ0ZXJcclxuICAgIGNvbnRlbnQ6ICcnXHJcbiAgICBkaXNwbGF5OiB0YWJsZVxyXG4gICAgY2xlYXI6IGJvdGhcclxuIiwiLyohIG5vcm1hbGl6ZS5jc3MgdjcuMC4wIHwgTUlUIExpY2Vuc2UgfCBnaXRodWIuY29tL25lY29sYXMvbm9ybWFsaXplLmNzcyAqLy8qIERvY3VtZW50XG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqLy8qKlxuICogMS4gQ29ycmVjdCB0aGUgbGluZSBoZWlnaHQgaW4gYWxsIGJyb3dzZXJzLlxuICogMi4gUHJldmVudCBhZGp1c3RtZW50cyBvZiBmb250IHNpemUgYWZ0ZXIgb3JpZW50YXRpb24gY2hhbmdlcyBpblxuICogICAgSUUgb24gV2luZG93cyBQaG9uZSBhbmQgaW4gaU9TLlxuICovaHRtbCB7XG4gIGxpbmUtaGVpZ2h0OiAxLjE1O1xuIC8qIDEgKi9cbiAgLW1zLXRleHQtc2l6ZS1hZGp1c3Q6IDEwMCU7XG4gLyogMiAqL1xuICAtd2Via2l0LXRleHQtc2l6ZS1hZGp1c3Q6IDEwMCU7XG4gLyogMiAqLztcbn0vKiBTZWN0aW9uc1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi8vKipcbiAqIFJlbW92ZSB0aGUgbWFyZ2luIGluIGFsbCBicm93c2VycyAob3BpbmlvbmF0ZWQpLlxuICovYm9keSB7XG4gIG1hcmdpbjogMDtcbn0vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFIDktLlxuICovYXJ0aWNsZSxhc2lkZSxmb290ZXIsaGVhZGVyLG5hdixzZWN0aW9uIHtcbiAgZGlzcGxheTogYmxvY2s7XG59LyoqXG4gKiBDb3JyZWN0IHRoZSBmb250IHNpemUgYW5kIG1hcmdpbiBvbiBgaDFgIGVsZW1lbnRzIHdpdGhpbiBgc2VjdGlvbmAgYW5kXG4gKiBgYXJ0aWNsZWAgY29udGV4dHMgaW4gQ2hyb21lLCBGaXJlZm94LCBhbmQgU2FmYXJpLlxuICovaDEge1xuICBmb250LXNpemU6IDJlbTtcbiAgbWFyZ2luOiAwLjY3ZW0gMDtcbn0vKiBHcm91cGluZyBjb250ZW50XG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqLy8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gSUUgOS0uXG4gKiAxLiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBJRS5cbiAqL2ZpZ2NhcHRpb24sZmlndXJlLG1haW4ge1xuIC8qIDEgKi9cbiAgZGlzcGxheTogYmxvY2s7XG59LyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgbWFyZ2luIGluIElFIDguXG4gKi9maWd1cmUge1xuICBtYXJnaW46IDFlbSA0MHB4O1xufS8qKlxuICogMS4gQWRkIHRoZSBjb3JyZWN0IGJveCBzaXppbmcgaW4gRmlyZWZveC5cbiAqIDIuIFNob3cgdGhlIG92ZXJmbG93IGluIEVkZ2UgYW5kIElFLlxuICovaHIge1xuICBib3gtc2l6aW5nOiBjb250ZW50LWJveDtcbiAvKiAxICovXG4gIGhlaWdodDogMDtcbiAvKiAxICovXG4gIG92ZXJmbG93OiB2aXNpYmxlO1xuIC8qIDIgKi87XG59LyoqXG4gKiAxLiBDb3JyZWN0IHRoZSBpbmhlcml0YW5jZSBhbmQgc2NhbGluZyBvZiBmb250IHNpemUgaW4gYWxsIGJyb3dzZXJzLlxuICogMi4gQ29ycmVjdCB0aGUgb2RkIGBlbWAgZm9udCBzaXppbmcgaW4gYWxsIGJyb3dzZXJzLlxuICovcHJlIHtcbiAgZm9udC1mYW1pbHk6IG1vbm9zcGFjZSwgbW9ub3NwYWNlO1xuIC8qIDEgKi9cbiAgZm9udC1zaXplOiAxZW07XG4gLyogMiAqLztcbn0vKiBUZXh0LWxldmVsIHNlbWFudGljc1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi8vKipcbiAqIDEuIFJlbW92ZSB0aGUgZ3JheSBiYWNrZ3JvdW5kIG9uIGFjdGl2ZSBsaW5rcyBpbiBJRSAxMC5cbiAqIDIuIFJlbW92ZSBnYXBzIGluIGxpbmtzIHVuZGVybGluZSBpbiBpT1MgOCsgYW5kIFNhZmFyaSA4Ky5cbiAqL2Ege1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcbiAvKiAxICovXG4gIC13ZWJraXQtdGV4dC1kZWNvcmF0aW9uLXNraXA6IG9iamVjdHM7XG4gLyogMiAqLztcbn0vKipcbiAqIDEuIFJlbW92ZSB0aGUgYm90dG9tIGJvcmRlciBpbiBDaHJvbWUgNTctIGFuZCBGaXJlZm94IDM5LS5cbiAqIDIuIEFkZCB0aGUgY29ycmVjdCB0ZXh0IGRlY29yYXRpb24gaW4gQ2hyb21lLCBFZGdlLCBJRSwgT3BlcmEsIGFuZCBTYWZhcmkuXG4gKi9hYmJyW3RpdGxlXSB7XG4gIGJvcmRlci1ib3R0b206IG5vbmU7XG4gLyogMSAqL1xuICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTtcbiAvKiAyICovXG4gIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lIGRvdHRlZDtcbiAvKiAyICovO1xufS8qKlxuICogUHJldmVudCB0aGUgZHVwbGljYXRlIGFwcGxpY2F0aW9uIG9mIGBib2xkZXJgIGJ5IHRoZSBuZXh0IHJ1bGUgaW4gU2FmYXJpIDYuXG4gKi9iLHN0cm9uZyB7XG4gIGZvbnQtd2VpZ2h0OiBpbmhlcml0O1xufS8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGZvbnQgd2VpZ2h0IGluIENocm9tZSwgRWRnZSwgYW5kIFNhZmFyaS5cbiAqL2Isc3Ryb25nIHtcbiAgZm9udC13ZWlnaHQ6IGJvbGRlcjtcbn0vKipcbiAqIDEuIENvcnJlY3QgdGhlIGluaGVyaXRhbmNlIGFuZCBzY2FsaW5nIG9mIGZvbnQgc2l6ZSBpbiBhbGwgYnJvd3NlcnMuXG4gKiAyLiBDb3JyZWN0IHRoZSBvZGQgYGVtYCBmb250IHNpemluZyBpbiBhbGwgYnJvd3NlcnMuXG4gKi9jb2RlLGtiZCxzYW1wIHtcbiAgZm9udC1mYW1pbHk6IG1vbm9zcGFjZSwgbW9ub3NwYWNlO1xuIC8qIDEgKi9cbiAgZm9udC1zaXplOiAxZW07XG4gLyogMiAqLztcbn0vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBmb250IHN0eWxlIGluIEFuZHJvaWQgNC4zLS5cbiAqL2RmbiB7XG4gIGZvbnQtc3R5bGU6IGl0YWxpYztcbn0vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBiYWNrZ3JvdW5kIGFuZCBjb2xvciBpbiBJRSA5LS5cbiAqL21hcmsge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmYwO1xuICBjb2xvcjogIzAwMDtcbn0vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBmb250IHNpemUgaW4gYWxsIGJyb3dzZXJzLlxuICovc21hbGwge1xuICBmb250LXNpemU6IDgwJTtcbn0vKipcbiAqIFByZXZlbnQgYHN1YmAgYW5kIGBzdXBgIGVsZW1lbnRzIGZyb20gYWZmZWN0aW5nIHRoZSBsaW5lIGhlaWdodCBpblxuICogYWxsIGJyb3dzZXJzLlxuICovc3ViLHN1cCB7XG4gIGZvbnQtc2l6ZTogNzUlO1xuICBsaW5lLWhlaWdodDogMDtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7XG59XG5cbnN1YiB7XG4gIGJvdHRvbTogLTAuMjVlbTtcbn1cblxuc3VwIHtcbiAgdG9wOiAtMC41ZW07XG59LyogRW1iZWRkZWQgY29udGVudFxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi8vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFIDktLlxuICovYXVkaW8sdmlkZW8ge1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG59LyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBpT1MgNC03LlxuICovYXVkaW86bm90KFtjb250cm9sc10pIHtcbiAgZGlzcGxheTogbm9uZTtcbiAgaGVpZ2h0OiAwO1xufS8qKlxuICogUmVtb3ZlIHRoZSBib3JkZXIgb24gaW1hZ2VzIGluc2lkZSBsaW5rcyBpbiBJRSAxMC0uXG4gKi9pbWcge1xuICBib3JkZXItc3R5bGU6IG5vbmU7XG59LyoqXG4gKiBIaWRlIHRoZSBvdmVyZmxvdyBpbiBJRS5cbiAqL3N2Zzpub3QoOnJvb3QpIHtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbn0vKiBGb3Jtc1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi8vKipcbiAqIDEuIENoYW5nZSB0aGUgZm9udCBzdHlsZXMgaW4gYWxsIGJyb3dzZXJzIChvcGluaW9uYXRlZCkuXG4gKiAyLiBSZW1vdmUgdGhlIG1hcmdpbiBpbiBGaXJlZm94IGFuZCBTYWZhcmkuXG4gKi9idXR0b24saW5wdXQsb3B0Z3JvdXAsc2VsZWN0LHRleHRhcmVhIHtcbiAgZm9udC1mYW1pbHk6IHNhbnMtc2VyaWY7XG4gLyogMSAqL1xuICBmb250LXNpemU6IDEwMCU7XG4gLyogMSAqL1xuICBsaW5lLWhlaWdodDogMS4xNTtcbiAvKiAxICovXG4gIG1hcmdpbjogMDtcbiAvKiAyICovO1xufS8qKlxuICogU2hvdyB0aGUgb3ZlcmZsb3cgaW4gSUUuXG4gKiAxLiBTaG93IHRoZSBvdmVyZmxvdyBpbiBFZGdlLlxuICovYnV0dG9uLGlucHV0IHtcbiAvKiAxICovXG4gIG92ZXJmbG93OiB2aXNpYmxlO1xufS8qKlxuICogUmVtb3ZlIHRoZSBpbmhlcml0YW5jZSBvZiB0ZXh0IHRyYW5zZm9ybSBpbiBFZGdlLCBGaXJlZm94LCBhbmQgSUUuXG4gKiAxLiBSZW1vdmUgdGhlIGluaGVyaXRhbmNlIG9mIHRleHQgdHJhbnNmb3JtIGluIEZpcmVmb3guXG4gKi9idXR0b24sc2VsZWN0IHtcbiAvKiAxICovXG4gIHRleHQtdHJhbnNmb3JtOiBub25lO1xufS8qKlxuICogMS4gUHJldmVudCBhIFdlYktpdCBidWcgd2hlcmUgKDIpIGRlc3Ryb3lzIG5hdGl2ZSBgYXVkaW9gIGFuZCBgdmlkZW9gXG4gKiAgICBjb250cm9scyBpbiBBbmRyb2lkIDQuXG4gKiAyLiBDb3JyZWN0IHRoZSBpbmFiaWxpdHkgdG8gc3R5bGUgY2xpY2thYmxlIHR5cGVzIGluIGlPUyBhbmQgU2FmYXJpLlxuICovYnV0dG9uLGh0bWwgW3R5cGU9XCJidXR0b25cIl0sW3R5cGU9XCJyZXNldFwiXSxbdHlwZT1cInN1Ym1pdFwiXSB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogYnV0dG9uO1xuIC8qIDIgKi87XG59LyoqXG4gKiBSZW1vdmUgdGhlIGlubmVyIGJvcmRlciBhbmQgcGFkZGluZyBpbiBGaXJlZm94LlxuICovYnV0dG9uOjotbW96LWZvY3VzLWlubmVyLFt0eXBlPVwiYnV0dG9uXCJdOjotbW96LWZvY3VzLWlubmVyLFt0eXBlPVwicmVzZXRcIl06Oi1tb3otZm9jdXMtaW5uZXIsW3R5cGU9XCJzdWJtaXRcIl06Oi1tb3otZm9jdXMtaW5uZXIge1xuICBib3JkZXItc3R5bGU6IG5vbmU7XG4gIHBhZGRpbmc6IDA7XG59LyoqXG4gKiBSZXN0b3JlIHRoZSBmb2N1cyBzdHlsZXMgdW5zZXQgYnkgdGhlIHByZXZpb3VzIHJ1bGUuXG4gKi9idXR0b246LW1vei1mb2N1c3JpbmcsW3R5cGU9XCJidXR0b25cIl06LW1vei1mb2N1c3JpbmcsW3R5cGU9XCJyZXNldFwiXTotbW96LWZvY3VzcmluZyxbdHlwZT1cInN1Ym1pdFwiXTotbW96LWZvY3VzcmluZyB7XG4gIG91dGxpbmU6IDFweCBkb3R0ZWQgQnV0dG9uVGV4dDtcbn0vKipcbiAqIENvcnJlY3QgdGhlIHBhZGRpbmcgaW4gRmlyZWZveC5cbiAqL2ZpZWxkc2V0IHtcbiAgcGFkZGluZzogMC4zNWVtIDAuNzVlbSAwLjYyNWVtO1xufS8qKlxuICogMS4gQ29ycmVjdCB0aGUgdGV4dCB3cmFwcGluZyBpbiBFZGdlIGFuZCBJRS5cbiAqIDIuIENvcnJlY3QgdGhlIGNvbG9yIGluaGVyaXRhbmNlIGZyb20gYGZpZWxkc2V0YCBlbGVtZW50cyBpbiBJRS5cbiAqIDMuIFJlbW92ZSB0aGUgcGFkZGluZyBzbyBkZXZlbG9wZXJzIGFyZSBub3QgY2F1Z2h0IG91dCB3aGVuIHRoZXkgemVybyBvdXRcbiAqICAgIGBmaWVsZHNldGAgZWxlbWVudHMgaW4gYWxsIGJyb3dzZXJzLlxuICovbGVnZW5kIHtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAvKiAxICovXG4gIGNvbG9yOiBpbmhlcml0O1xuIC8qIDIgKi9cbiAgZGlzcGxheTogdGFibGU7XG4gLyogMSAqL1xuICBtYXgtd2lkdGg6IDEwMCU7XG4gLyogMSAqL1xuICBwYWRkaW5nOiAwO1xuIC8qIDMgKi9cbiAgd2hpdGUtc3BhY2U6IG5vcm1hbDtcbiAvKiAxICovO1xufS8qKlxuICogMS4gQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gSUUgOS0uXG4gKiAyLiBBZGQgdGhlIGNvcnJlY3QgdmVydGljYWwgYWxpZ25tZW50IGluIENocm9tZSwgRmlyZWZveCwgYW5kIE9wZXJhLlxuICovcHJvZ3Jlc3Mge1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gLyogMSAqL1xuICB2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7XG4gLyogMiAqLztcbn0vKipcbiAqIFJlbW92ZSB0aGUgZGVmYXVsdCB2ZXJ0aWNhbCBzY3JvbGxiYXIgaW4gSUUuXG4gKi90ZXh0YXJlYSB7XG4gIG92ZXJmbG93OiBhdXRvO1xufS8qKlxuICogMS4gQWRkIHRoZSBjb3JyZWN0IGJveCBzaXppbmcgaW4gSUUgMTAtLlxuICogMi4gUmVtb3ZlIHRoZSBwYWRkaW5nIGluIElFIDEwLS5cbiAqL1t0eXBlPVwiY2hlY2tib3hcIl0sW3R5cGU9XCJyYWRpb1wiXSB7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gLyogMSAqL1xuICBwYWRkaW5nOiAwO1xuIC8qIDIgKi87XG59LyoqXG4gKiBDb3JyZWN0IHRoZSBjdXJzb3Igc3R5bGUgb2YgaW5jcmVtZW50IGFuZCBkZWNyZW1lbnQgYnV0dG9ucyBpbiBDaHJvbWUuXG4gKi9bdHlwZT1cIm51bWJlclwiXTo6LXdlYmtpdC1pbm5lci1zcGluLWJ1dHRvbixbdHlwZT1cIm51bWJlclwiXTo6LXdlYmtpdC1vdXRlci1zcGluLWJ1dHRvbiB7XG4gIGhlaWdodDogYXV0bztcbn0vKipcbiAqIDEuIENvcnJlY3QgdGhlIG9kZCBhcHBlYXJhbmNlIGluIENocm9tZSBhbmQgU2FmYXJpLlxuICogMi4gQ29ycmVjdCB0aGUgb3V0bGluZSBzdHlsZSBpbiBTYWZhcmkuXG4gKi9bdHlwZT1cInNlYXJjaFwiXSB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogdGV4dGZpZWxkO1xuIC8qIDEgKi9cbiAgb3V0bGluZS1vZmZzZXQ6IC0ycHg7XG4gLyogMiAqLztcbn0vKipcbiAqIFJlbW92ZSB0aGUgaW5uZXIgcGFkZGluZyBhbmQgY2FuY2VsIGJ1dHRvbnMgaW4gQ2hyb21lIGFuZCBTYWZhcmkgb24gbWFjT1MuXG4gKi9bdHlwZT1cInNlYXJjaFwiXTo6LXdlYmtpdC1zZWFyY2gtY2FuY2VsLWJ1dHRvbixbdHlwZT1cInNlYXJjaFwiXTo6LXdlYmtpdC1zZWFyY2gtZGVjb3JhdGlvbiB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogbm9uZTtcbn0vKipcbiAqIDEuIENvcnJlY3QgdGhlIGluYWJpbGl0eSB0byBzdHlsZSBjbGlja2FibGUgdHlwZXMgaW4gaU9TIGFuZCBTYWZhcmkuXG4gKiAyLiBDaGFuZ2UgZm9udCBwcm9wZXJ0aWVzIHRvIGBpbmhlcml0YCBpbiBTYWZhcmkuXG4gKi86Oi13ZWJraXQtZmlsZS11cGxvYWQtYnV0dG9uIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBidXR0b247XG4gLyogMSAqL1xuICBmb250OiBpbmhlcml0O1xuIC8qIDIgKi87XG59LyogSW50ZXJhY3RpdmVcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovLypcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFIDktLlxuICogMS4gQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gRWRnZSwgSUUsIGFuZCBGaXJlZm94LlxuICovZGV0YWlscyxtZW51IHtcbiAgZGlzcGxheTogYmxvY2s7XG59LypcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIGFsbCBicm93c2Vycy5cbiAqL3N1bW1hcnkge1xuICBkaXNwbGF5OiBsaXN0LWl0ZW07XG59LyogU2NyaXB0aW5nXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqLy8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gSUUgOS0uXG4gKi9jYW52YXMge1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG59LyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBJRS5cbiAqL3RlbXBsYXRlIHtcbiAgZGlzcGxheTogbm9uZTtcbn0vKiBIaWRkZW5cbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBJRSAxMC0uXG4gKi9baGlkZGVuXSB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG5cbi5jbGVhcmZpeDo6YWZ0ZXIsLm1haW46OmFmdGVyLC5jb250YWluZXI6OmFmdGVyLC5yb3c6OmFmdGVyLC5ncmlkLWZsZXg6OmFmdGVyLC5wYWdpbmF0aW9uOjphZnRlciwuaGVhZGVyOjphZnRlciwuc2VhcmNoX19ncm91cDo6YWZ0ZXIsLmZvb3Rlcjo6YWZ0ZXIsLnRvb2xzQ2FyZF9fZm9vdGVyOjphZnRlciB7XG4gIGNvbnRlbnQ6ICcnO1xuICBkaXNwbGF5OiB0YWJsZTtcbiAgY2xlYXI6IGJvdGg7XG59XG5cbi5zaG93IHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIG9wYWNpdHk6IDE7XG4gIHZpc2liaWxpdHk6IHZpc2libGU7XG59XG5cbi5oaWRlIHtcbiAgZGlzcGxheTogbm9uZTtcbiAgb3BhY2l0eTogMDtcbiAgdmlzaWJpbGl0eTogaGlkZGVuO1xufVxuXG4ucHVsbC1sZWZ0IHtcbiAgZmxvYXQ6IGxlZnQ7XG59XG5cbi5wdWxsLXJpZ2h0IHtcbiAgZmxvYXQ6IHJpZ2h0O1xufVxuXG4uc3Itb25seSxpbnB1dCN0b2dnbGVNZW51LGlucHV0I3RvZ2dsZVNlYXJjaCxpbnB1dCN0b2dnbGVTaWRlYmFyLC50b29sc0NhcmRfX2ltYWdlIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB3aWR0aDogMXB4O1xuICBoZWlnaHQ6IDFweDtcbiAgcGFkZGluZzogMDtcbiAgbWFyZ2luOiAtMXB4O1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICBjbGlwOiByZWN0KDAsIDAsIDAsIDApO1xuICBib3JkZXI6IDA7XG59XG5cbi52aWRlby13cmFwcGVyIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBwYWRkaW5nLWJvdHRvbTogNTYuMjUlO1xuICBwYWRkaW5nLXRvcDogMjVweDtcbiAgaGVpZ2h0OiAwO1xufVxuXG4udmlkZW8td3JhcHBlciBvYmplY3QsLnZpZGVvLXdyYXBwZXIgZW1iZWQsLnZpZGVvLXdyYXBwZXIgaWZyYW1lIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDA7XG4gIGxlZnQ6IDA7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDEwMCU7XG59XG5cbmJvZHkge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmJmZmZhO1xufVxuXG5ociB7XG4gIGJvcmRlcjogbm9uZTtcbiAgYm9yZGVyLWJvdHRvbTogMC4wNXJlbSBzb2xpZCByZ2JhKDAsMCwwLDAuMSk7XG4gIG1hcmdpbjogMzBweCAwO1xufVxuXG4uYmFzZSB7XG4gIG1pbi1oZWlnaHQ6IDEwMHZoO1xufVxuXG4ubWFpbiB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmYmZmZmE7XG4gIHBhZGRpbmc6IDEyMHB4IDFyZW0gMDtcbiAgdHJhbnNpdGlvbjogYWxsIDAuM3MgY3ViaWMtYmV6aWVyKDAuNCwgMiwgMC42OCwgMSk7XG4gIHdpZHRoOiAxMDAlO1xuICBtYXJnaW4tbGVmdDogMDtcbn1cblxuLnRvZ2dsZU1lbnUsLnRvZ2dsZVNpZGViYXIge1xuICBiYWNrZ3JvdW5kOiBub25lIHRyYW5zcGFyZW50O1xuICBib3JkZXI6IG5vbmU7XG4gIHBhZGRpbmc6IDEwcHg7XG4gIGN1cnNvcjogcG9pbnRlcjtcbiAgdHJhbnNpdGlvbjogYWxsIDAuNXMgY3ViaWMtYmV6aWVyKDAuNCwgMiwgMC42OCwgMSk7XG4gIHRyYW5zZm9ybTogcm90YXRlKDBkZWcpO1xufVxuXG4udG9nZ2xlTWVudSBzdmcsLnRvZ2dsZVNpZGViYXIgc3ZnIHtcbiAgbWFyZ2luOiAwO1xuICBwYWRkaW5nOiAwO1xuICBsaW5lLWhlaWdodDogMTtcbn1cblxuLnRvZ2dsZU1lbnUge1xuICBmbG9hdDogcmlnaHQ7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgei1pbmRleDogMjAwO1xufVxuXG4udG9nZ2xlU2lkZWJhciB7XG4gIGZsb2F0OiBsZWZ0O1xuICB0cmFuc2Zvcm06IHJvdGF0ZSgxODBkZWcpO1xuICBwb3NpdGlvbjogZml4ZWQ7XG4gIHRvcDogMDtcbiAgbGVmdDogMjBweDtcbiAgbWFyZ2luOiAwO1xuICBsaW5lLWhlaWdodDogMTtcbiAgei1pbmRleDogMzAwO1xufVxuXG4udG9nZ2xlU2lkZWJhciBzdmcge1xuICBzdHJva2U6ICMyNjI2MjY7XG59XG5cbmlucHV0I3RvZ2dsZU1lbnU6Y2hlY2tlZCB+IC5oZWFkZXJfX25hdmJhciB7XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlM2QoMCwgLTM1JSwgMCk7XG59XG5cbmlucHV0I3RvZ2dsZVNpZGViYXI6Y2hlY2tlZCB+IC5zaWRlYmFyIHtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGUzZCgwLCAwLCAwKTtcbn1cblxuaW5wdXQjdG9nZ2xlU2lkZWJhcjpjaGVja2VkIH4gLm1haW4saW5wdXQjdG9nZ2xlU2lkZWJhcjpjaGVja2VkIH4gLm1haW4gLmhlYWRlciB7XG4gIHdpZHRoOiBjYWxjKDEwMCUgLSAyMHJlbSk7XG4gIG1hcmdpbi1sZWZ0OiAyMHJlbTtcbn1cblxuaW5wdXQjdG9nZ2xlU2lkZWJhcjpjaGVja2VkIH4gLnRvZ2dsZVNpZGViYXIge1xuICB0cmFuc2Zvcm06IHJvdGF0ZSgwZGVnKTtcbiAgbWFyZ2luLWxlZnQ6IDA7XG4gIHRvcDogNXB4O1xufVxuXG5pbnB1dCN0b2dnbGVTaWRlYmFyOmNoZWNrZWQgfiAudG9nZ2xlU2lkZWJhciBzdmcge1xuICBzdHJva2U6ICNmZmY7XG59XG5cbmh0bWwge1xuICBmb250LXNpemU6IDE2cHg7XG4gIGZvbnQtc2l6ZTogMXJlbTtcbn1cblxuYm9keSB7XG4gIGNvbG9yOiAjMjYyNjI2O1xuICBmb250LWZhbWlseTogJ1JhbGV3YXknLCBIZWx2ZXRpY2EsIEFyaWFsLCBzYW5zLXNlcmlmO1xuICBmb250LXdlaWdodDogNTAwO1xuICBmb250LXNpemU6IDE2cHg7XG4gIGZvbnQtc2l6ZTogMXJlbTtcbiAgbGluZS1oZWlnaHQ6IDEuNjtcbn1cblxuaDEsaDIsaDMsaDQsaDUsaDYsdWwscCB7XG4gIG1hcmdpbjogMC45Mzc1cmVtIDA7XG59XG5cbmgxOmZpcnN0LWNoaWxkLGgyOmZpcnN0LWNoaWxkLGgzOmZpcnN0LWNoaWxkLGg0OmZpcnN0LWNoaWxkLGg1OmZpcnN0LWNoaWxkLGg2OmZpcnN0LWNoaWxkLHVsOmZpcnN0LWNoaWxkLHA6Zmlyc3QtY2hpbGQge1xuICBtYXJnaW4tdG9wOiAwO1xufVxuXG5oMTpsYXN0LWNoaWxkLGgyOmxhc3QtY2hpbGQsaDM6bGFzdC1jaGlsZCxoNDpsYXN0LWNoaWxkLGg1Omxhc3QtY2hpbGQsaDY6bGFzdC1jaGlsZCx1bDpsYXN0LWNoaWxkLHA6bGFzdC1jaGlsZCB7XG4gIG1hcmdpbi1ib3R0b206IDA7XG59XG5cbnAubGVhZCB7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgcGFkZGluZy1ib3R0b206IDYwcHg7XG4gIGZvbnQtc2l6ZTogMTkuMnB4O1xuICBmb250LXNpemU6IDEuMnJlbTtcbiAgZm9udC13ZWlnaHQ6IDMwMDtcbn1cblxucC5sZWFkIHNwYW4ge1xuICBtYXJnaW4tYm90dG9tOiAwLjkzNzVyZW07XG4gIGRpc3BsYXk6IGJsb2NrO1xufVxuXG5oMSB7XG4gIGZvbnQtc2l6ZTogMzJweDtcbiAgZm9udC1zaXplOiAycmVtO1xufVxuXG5oMiB7XG4gIGZvbnQtc2l6ZTogMjUuNnB4O1xuICBmb250LXNpemU6IDEuNnJlbTtcbn1cblxuaDMge1xuICBmb250LXNpemU6IDIyLjRweDtcbiAgZm9udC1zaXplOiAxLjRyZW07XG59XG5cbmg0IHtcbiAgZm9udC1zaXplOiAxOS4ycHg7XG4gIGZvbnQtc2l6ZTogMS4ycmVtO1xufVxuXG5oNSxoNiB7XG4gIGZvbnQtc2l6ZTogMTZweDtcbiAgZm9udC1zaXplOiAxcmVtO1xufVxuXG5hIHtcbiAgY29sb3I6ICM2ZmExZTg7XG4gIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lO1xufVxuXG5hOmhvdmVyLGE6Zm9jdXMge1xuICBjb2xvcjogIzdkYWFlYTtcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xufVxuXG5hOmZvY3VzIHtcbiAgb3V0bGluZTogM3B4IHNvbGlkIHJnYmEoMTExLDE2MSwyMzIsMC43KTtcbiAgb3V0bGluZS1vZmZzZXQ6IDNweDtcbn1cblxuaHRtbCB7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG59XG5cbiosKjpiZWZvcmUsOmFmdGVyIHtcbiAgYm94LXNpemluZzogaW5oZXJpdDtcbn1cblxuLmNvbnRhaW5lciB7XG4gIHdpZHRoOiBhdXRvO1xuICBtYXgtd2lkdGg6IDEwMCU7XG4gIGZsb2F0OiBub25lO1xuICBkaXNwbGF5OiBibG9jaztcbiAgbWFyZ2luLXJpZ2h0OiBhdXRvO1xuICBtYXJnaW4tbGVmdDogYXV0bztcbiAgcGFkZGluZy1sZWZ0OiAwO1xuICBwYWRkaW5nLXJpZ2h0OiAwO1xuICBwYWRkaW5nLXJpZ2h0OiAxNXB4O1xuICBwYWRkaW5nLWxlZnQ6IDE1cHg7XG59XG5cbi5jb250YWluZXI6OmFmdGVyIHtcbiAgY29udGVudDogJyc7XG4gIGRpc3BsYXk6IHRhYmxlO1xuICBjbGVhcjogYm90aDtcbn1cblxuLnJvdywuZ3JpZC1mbGV4IHtcbiAgbWFyZ2luLWxlZnQ6IC0xNXB4O1xuICBtYXJnaW4tcmlnaHQ6IC0xNXB4O1xufVxuXG4uZ3JpZC1mbGV4IHtcbiAgZGlzcGxheTogZmxleDtcbn1cblxuLmdyaWQtZmxleC0tZmxvdyB7XG4gIGZsZXgtZmxvdzogcm93O1xufVxuXG4uZ3JpZC1mbGV4LS13cmFwIHtcbiAgZmxleC13cmFwOiB3cmFwO1xufVxuXG4uZ3JpZC1mbGV4LS1zcGFjZS1hcm91bmQge1xuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWFyb3VuZDtcbn1cblxuLmdyaWQtZmxleC0tY2VudGVyIHtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG59XG5cbi5ncmlkLWZsZXgtLXJldmVyc2Uge1xuICBmbGV4LXdyYXA6IHdyYXAtcmV2ZXJzZTtcbn1cblxuLmdyaWQtZmxleF9fY29sdW1uIHtcbiAgZmxleDogMTtcbiAgd2lkdGg6IDEwMCU7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgcGFkZGluZy1sZWZ0OiAxNXB4O1xuICBwYWRkaW5nLXJpZ2h0OiAxNXB4O1xufVxuXG4uZ3JpZC1mbGV4LS1maXQgPiAuZ3JpZC1mbGV4X19jb2x1bW4ge1xuICBmbGV4OiAxO1xufVxuXG4uZ3JpZC1mbGV4LS1mdWxsID4gLmdyaWQtZmxleF9fY29sdW1uIHtcbiAgZmxleDogMCAwIDEwMCU7XG59XG5cbi5ncmlkLWZsZXgtLTFvZjIgPiAuZ3JpZC1mbGV4X19jb2x1bW4ge1xuICBmbGV4OiAwIDAgNTAlO1xufVxuXG4uZ3JpZC1mbGV4LS0xb2YzID4gLmdyaWQtZmxleF9fY29sdW1uIHtcbiAgZmxleDogMCAwIDMzLjMzMzMlO1xufVxuXG4uZ3JpZC1mbGV4LS0xb2Y0ID4gLmdyaWQtZmxleF9fY29sdW1uIHtcbiAgZmxleDogMCAwIDI1JTtcbn1cblxuLmJ1dHRvbiwucGFnaW5hdGlvbl9fcHJldiwucGFnaW5hdGlvbl9fbmV4dCB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIHRleHQtdHJhbnNmb3JtOiBub25lO1xuICBmb250LXNpemU6IDE0cHg7XG4gIGZvbnQtc2l6ZTogMC44NzVyZW07XG4gIHBhZGRpbmc6IDAuNzVyZW0gMS4yNXJlbTtcbiAgbWFyZ2luOiAwIDAuNXJlbTtcbiAgZm9udC13ZWlnaHQ6IDUwMDtcbiAgY29sb3I6ICM5YTllYTQ7XG4gIGJhY2tncm91bmQ6IG5vbmUgdHJhbnNwYXJlbnQ7XG4gIGJvcmRlci1yYWRpdXM6IDAuMjVyZW07XG4gIGJvcmRlcjogMXB4IHNvbGlkIHRyYW5zcGFyZW50O1xuICBjdXJzb3I6IHBvaW50ZXI7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogbm9uZTtcbiAgYXBwZWFyYW5jZTogbm9uZTtcbiAgb3ZlcmZsb3c6IHZpc2libGU7XG4gIGxpbmUtaGVpZ2h0OiAxO1xuICB3aWxsLWNoYW5nZTogdHJhbnNmb3JtO1xuICAtbW96LW9zeC1mb250LXNtb290aGluZzogZ3JheXNjYWxlO1xuICBiYWNrZmFjZS12aXNpYmlsaXR5OiBoaWRkZW47XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlWigwKTtcbiAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIDAuMTVzIGVhc2Utb3V0LCBjb2xvciAwLjE1cyBlYXNlLW91dCwgYmFja2dyb3VuZC1jb2xvciAwLjE1cyBlYXNlLW91dDtcbn1cblxuLmJ1dHRvbjpmb2N1cywucGFnaW5hdGlvbl9fcHJldjpmb2N1cywucGFnaW5hdGlvbl9fbmV4dDpmb2N1cywuYnV0dG9uOmhvdmVyLC5wYWdpbmF0aW9uX19wcmV2OmhvdmVyLC5wYWdpbmF0aW9uX19uZXh0OmhvdmVyIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2IzYjZiYjtcbiAgY29sb3I6ICNmZmY7XG59XG5cbi5idXR0b24tLWRlZmF1bHQsLnBhZ2luYXRpb25fX3ByZXYtLWRlZmF1bHQsLnBhZ2luYXRpb25fX25leHQtLWRlZmF1bHQsLnBhZ2luYXRpb25fX3ByZXYsLnBhZ2luYXRpb25fX25leHQge1xuICBib3JkZXItY29sb3I6ICM5YTllYTQ7XG59XG5cbi5idXR0b24tLXByaW1hcnksLnBhZ2luYXRpb25fX3ByZXYtLXByaW1hcnksLnBhZ2luYXRpb25fX25leHQtLXByaW1hcnkge1xuICBib3JkZXItY29sb3I6ICNmZmY7XG4gIGJhY2tncm91bmQ6ICM5YTllYTQ7XG4gIGNvbG9yOiAjZmZmO1xufVxuXG4ucGFnaW5hdGlvbiB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIG1hcmdpbi10b3A6IDMwcHg7XG59XG5cbi5wYWdpbmF0aW9uIC5jb250YWluZXIge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG59XG5cbi5wYWdpbmF0aW9uIGEsLnBhZ2luYXRpb24gc3BhbiB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgcGFkZGluZzogMTVweDtcbiAgd2lkdGg6IDEwMCU7XG59XG5cbi5wYWdpbmF0aW9uIHNwYW4ge1xuICBvcGFjaXR5OiAwLjY7XG59XG5cbi5wYWdpbmF0aW9uX19wcmV2LC5wYWdpbmF0aW9uX19uZXh0IHtcbiAgbWFyZ2luOiAwO1xufVxuXG4uaGVhZGVyIHtcbiAgbWluLWhlaWdodDogNjBweDtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcbiAgYm94LXNoYWRvdzogMCAwIDQwcHggMCByZ2JhKDAsMCwwLDAuMSk7XG4gIHotaW5kZXg6IDEwMDtcbiAgcGFkZGluZy1sZWZ0OiAxLjg3NXJlbTtcbiAgcGFkZGluZy1yaWdodDogMS44NzVyZW07XG4gIG1hcmdpbi1ib3R0b206IDMwcHg7XG4gIHBvc2l0aW9uOiBmaXhlZDtcbiAgdG9wOiAwO1xuICByaWdodDogMDtcbiAgbGVmdDogMDtcbiAgd2lkdGg6IDEwMCU7XG4gIG1hcmdpbi1sZWZ0OiAwO1xuICB0cmFuc2l0aW9uOiBhbGwgMC4zcyBjdWJpYy1iZXppZXIoMC40LCAyLCAwLjY4LCAxKTtcbn1cblxuLmhlYWRlcl9fbmF2YmFyIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICByaWdodDogMDtcbiAgbGVmdDogMDtcbiAgdG9wOiAwO1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZTNkKDAsIC0xNTAlLCAwKTtcbiAgdHJhbnNpdGlvbjogYWxsIDAuM3MgY3ViaWMtYmV6aWVyKDAuNCwgMiwgMC42OCwgMSk7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XG4gIGJveC1zaGFkb3c6IDAgMCA0MHB4IDAgcmdiYSgwLDAsMCwwLjEpO1xuICB6LWluZGV4OiAxMDA7XG59XG5cbi5oZWFkZXJfX25hdiB7XG4gIHRleHQtYWxpZ246IHJpZ2h0O1xuICBsaXN0LXN0eWxlOiBub25lO1xuICBwYWRkaW5nOiAyNDBweCAzMHB4IDMwcHg7XG4gIG1hcmdpbjogMDtcbn1cblxuLmhlYWRlcl9fbmF2LWl0ZW0ge1xuICBkaXNwbGF5OiBibG9jaztcbn1cblxuLmhlYWRlcl9fbmF2LWxpbmssLmhlYWRlcl9fbmF2LXNlYXJjaCwuaGVhZGVyX19uYXYgc3ZnIHtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICBsaW5lLWhlaWdodDogNjBweDtcbn1cblxuLmhlYWRlcl9fbmF2LXNlYXJjaCwuaGVhZGVyX19uYXYtbGluayB7XG4gIGZvbnQtc2l6ZTogMTZweDtcbiAgZm9udC1zaXplOiAxcmVtO1xuICBmb250LXdlaWdodDogNTAwO1xuICBsZXR0ZXItc3BhY2luZzogMC4xcHg7XG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgcGFkZGluZzogMCAxLjI1cmVtO1xuICBjdXJzb3I6IHBvaW50ZXI7XG4gIGNvbG9yOiAjOWE5ZWE0O1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG59XG5cbi5oZWFkZXJfX25hdi1zZWFyY2g6YWZ0ZXIsLmhlYWRlcl9fbmF2LWxpbms6YWZ0ZXIge1xuICBkaXNwbGF5OiBibG9jaztcbiAgY29udGVudDogJyc7XG4gIHdpZHRoOiAwO1xuICBoZWlnaHQ6IDNweDtcbiAgYmFja2dyb3VuZDogIzZmYTFlODtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBib3R0b206IDA7XG4gIHRyYW5zaXRpb246IHdpZHRoIDAuMTJzIGVhc2UtaW4tb3V0O1xufVxuXG4uaGVhZGVyX19uYXYtc2VhcmNoLS1hY3RpdmUsLmhlYWRlcl9fbmF2LWxpbmstLWFjdGl2ZSwuaGVhZGVyX19uYXYtc2VhcmNoOmhvdmVyLC5oZWFkZXJfX25hdi1saW5rOmhvdmVyIHtcbiAgY29sb3I6ICM2ZmExZTg7XG59XG5cbi5oZWFkZXJfX25hdi1zZWFyY2gtLWFjdGl2ZTphZnRlciwuaGVhZGVyX19uYXYtbGluay0tYWN0aXZlOmFmdGVyLC5oZWFkZXJfX25hdi1zZWFyY2g6aG92ZXI6YWZ0ZXIsLmhlYWRlcl9fbmF2LWxpbms6aG92ZXI6YWZ0ZXIge1xuICB3aWR0aDogNDAlO1xufVxuXG4uaGVhZGVyX19uYXYtc2VhcmNoIHN2ZyB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgdG9wOiA1cHg7XG59XG5cbi5zaWRlYmFyIHtcbiAgbWF4LXdpZHRoOiAyMHJlbTtcbiAgZGlzcGxheTogZmxleDtcbiAgLXdlYmtpdC1ib3gtb3JpZW50OiB2ZXJ0aWNhbDtcbiAgLXdlYmtpdC1ib3gtZGlyZWN0aW9uOiBub3JtYWw7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIGhlaWdodDogMTAwdmg7XG4gIGJhY2tncm91bmQ6ICMzYTM4MzggdXJsKFwiLi4vaW1hZ2VzL2hlcm8taW1hZ2UucG5nXCIpIG5vLXJlcGVhdCA4NSUgMDtcbiAgYmFja2dyb3VuZC1zaXplOiBjb3ZlciAxMDAlO1xuICB6LWluZGV4OiAyMDA7XG4gIHBvc2l0aW9uOiBmaXhlZDtcbiAgbGVmdDogMDtcbiAgcmlnaHQ6IDA7XG4gIGJvdHRvbTogMDtcbiAgdHJhbnNpdGlvbjogYWxsIDAuM3MgY3ViaWMtYmV6aWVyKDAuNCwgMiwgMC42OCwgMSk7XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlM2QoLTEwMCUsIDAsIDApO1xufVxuXG4uc2lkZWJhcjo6YmVmb3JlIHtcbiAgY29udGVudDogJyc7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgZGlzcGxheTogYmxvY2s7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDEwMCU7XG4gIHRvcDogMDtcbiAgcmlnaHQ6IDA7XG4gIGJvdHRvbTogMDtcbiAgbGVmdDogMDtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSg1OCw1Niw1NiwwLjkpO1xuICB6LWluZGV4OiAxO1xufVxuXG4uc2lkZWJhcl9fdGl0bGUge1xuICBkaXNwbGF5OiBibG9jaztcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBmb250LXNpemU6IDIycHg7XG4gIGZvbnQtc2l6ZTogMS4zNzVyZW07XG4gIHBhZGRpbmc6IDEuODc1cmVtIDEuMjVyZW07XG4gIGZsZXg6IG5vbmU7XG59XG5cbi5zaWRlYmFyX190aXRsZSBhIHtcbiAgY29sb3I6ICNmZmY7XG4gIGZvbnQtd2VpZ2h0OiA3MDA7XG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbn1cblxuLnNpZGViYXJfX3RpdGxlIHN2ZyB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbn1cblxuLnNpZGViYXJfX3RpdGxlIHNwYW4ge1xuICBkaXNwbGF5OiBibG9jaztcbn1cblxuLnNpZGViYXJfX3RpdGxlLC5zaWRlYmFyX19mb290ZXIsLnNpZGViYXJfX25hdmJhciB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgei1pbmRleDogMjtcbn1cblxuLnNpZGViYXJfX25hdmJhciB7XG4gIHBhZGRpbmc6IDAgMS4yNXJlbTtcbiAgZmxleDogMTtcbn1cblxuLnNpZGViYXJfX25hdmJhciwuc2lkZWJhcl9fbmF2YmFyIC5uYXYge1xuICBvdmVyZmxvdy15OiBhdXRvO1xufVxuXG4uc2lkZWJhcl9fbmF2YmFyIC5uYXYge1xuICBtYXJnaW4tYm90dG9tOiAxLjJyZW07XG59XG5cbi5zaWRlYmFyX19mb290ZXIge1xuICBwYWRkaW5nOiAxcmVtIDEuMjVyZW07XG4gIGJvcmRlci10b3A6IDFweCBzb2xpZCByZ2JhKDI1NSwyNTUsMjU1LDAuMik7XG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtYXJvdW5kO1xuICBkaXNwbGF5OiBmbGV4O1xufVxuXG4uc2lkZWJhcl9fZm9vdGVyIGEge1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xufVxuXG4uc2lkZWJhcl9fZm9vdGVyIHN2ZyB7XG4gIHdpZHRoOiAxLjM3NXJlbTtcbiAgZmlsbDogI2ZmZjtcbn1cblxuLm5hdiB7XG4gIGxpc3Qtc3R5bGU6IG5vbmU7XG4gIHBhZGRpbmc6IDA7XG4gIG1hcmdpbjogMDtcbn1cblxuLm5hdl9faXRlbSB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBtYXJnaW4tYm90dG9tOiAycHg7XG59XG5cbi5uYXZfX2xpbmsge1xuICBmb250LXNpemU6IDE0cHg7XG4gIGZvbnQtc2l6ZTogMC44NzVyZW07XG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgZGlzcGxheTogYmxvY2s7XG4gIHBhZGRpbmc6IDAuNzVyZW0gMS4yNXJlbTtcbiAgYm9yZGVyLXJhZGl1czogMC4zMTI1cmVtO1xuICB0cmFuc2l0aW9uOiBjb2xvciAwLjJzIGVhc2UtaW4tb3V0LCBiYWNrZ3JvdW5kLWNvbG9yIDAuMnMgZWFzZS1pbi1vdXQ7XG59XG5cbi5uYXZfX2xpbmssLm5hdl9fbGluazpob3ZlciwubmF2X19saW5rOmZvY3VzIHtcbiAgY29sb3I6ICNmZmY7XG59XG5cbi5uYXZfX2xpbmstLWFjdGl2ZSwubmF2X19saW5rOmhvdmVyLC5uYXZfX2xpbms6Zm9jdXMge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDI1NSwyNTUsMjU1LDAuMik7XG59XG5cbi5uYXZfX2xpbmstLWFjdGl2ZSB7XG4gIHBvaW50ZXItZXZlbnRzOiBub25lO1xufVxuXG4ubmF2X19iYWRnZSB7XG4gIGZsb2F0OiByaWdodDtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB0b3A6IDFweDtcbiAgY29sb3I6ICMxMTE7XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMjU1LDI1NSwyNTUsMC43NSk7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgcGFkZGluZzogMC4yNWVtIDAuNGVtO1xuICBmb250LXNpemU6IDEycHg7XG4gIGZvbnQtc2l6ZTogMC43NXJlbTtcbiAgZm9udC13ZWlnaHQ6IDcwMDtcbiAgbGluZS1oZWlnaHQ6IDE7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcbiAgdmVydGljYWwtYWxpZ246IGJhc2VsaW5lO1xuICBib3JkZXItcmFkaXVzOiAwLjI1cmVtO1xufVxuXG4uc2VhcmNoIHtcbiAgZGlzcGxheTogbm9uZTtcbiAgcG9zaXRpb246IGZpeGVkO1xuICB0b3A6IDA7XG4gIHJpZ2h0OiAwO1xuICBib3R0b206IDA7XG4gIGxlZnQ6IDA7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDEwMCU7XG4gIHotaW5kZXg6IDEwMDAwO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDI1NSwyNTUsMjU1LDAuOCk7XG59XG5cbi5zZWFyY2hfX2lubmVyIHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIG1heC13aWR0aDogMTMwMHB4O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmJmZmZhO1xuICBib3gtc2hhZG93OiAwIDFweCAxNHB4IDAgcmdiYSgxNDQsMTU0LDE2OCwwLjY0KTtcbiAgbWFyZ2luOiAzMHB4IGF1dG87XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgb3ZlcmZsb3cteTogYXV0bztcbn1cblxuLnNlYXJjaF9fY2xvc2Uge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHJpZ2h0OiAzMHB4O1xuICB0b3A6IDMwcHg7XG4gIGN1cnNvcjogcG9pbnRlcjtcbn1cblxuLnNlYXJjaF9fY29udGFpbmVyIHtcbiAgaGVpZ2h0OiBjYWxjKDEwMHZoIC0gMTgwcHgpO1xuICBwYWRkaW5nOiAzMHB4O1xufVxuXG4uc2VhcmNoX19ncm91cCB7XG4gIGJhY2tncm91bmQ6ICNmZmY7XG4gIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCByZ2JhKDAsMCwwLDAuMTUpO1xuICBwYWRkaW5nOiAzMHB4O1xuICBkaXNwbGF5OiBibG9jaztcbiAgd2lkdGg6IDEwMCU7XG59XG5cbi5zZWFyY2hfX2lucHV0IHtcbiAgYm9yZGVyOiBub25lO1xuICBiYWNrZ3JvdW5kOiBub25lICNmZmY7XG4gIGJveC1zaGFkb3c6IDAgMCAxNHB4IDAgcmdiYSgxNDQsMTU0LDE2OCwwLjQ2KTtcbiAgbGluZS1oZWlnaHQ6IDMwcHg7XG4gIGZvbnQtc2l6ZTogMjZweDtcbiAgZm9udC1zaXplOiAxLjYyNXJlbTtcbiAgdGV4dC1hbGlnbjogbGVmdDtcbiAgcGFkZGluZzogMTVweCAzMHB4O1xuICBtYXJnaW46IDAgYXV0bztcbiAgZGlzcGxheTogYmxvY2s7XG4gIG1heC13aWR0aDogOTAwcHg7XG4gIGZvbnQtd2VpZ2h0OiAzMDA7XG4gIGJvcmRlci1yYWRpdXM6IDRweDtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBub25lO1xuICBhcHBlYXJhbmNlOiBub25lO1xufVxuXG4uc2VhcmNoX19saXN0IHtcbiAgbGlzdC1zdHlsZTogbm9uZTtcbn1cblxuaW5wdXQjdG9nZ2xlU2VhcmNoOmNoZWNrZWQgfiAuc2VhcmNoIHtcbiAgZGlzcGxheTogYmxvY2s7XG59XG5cbi5mb290ZXIge1xuICBwYWRkaW5nLXRvcDogMzBweDtcbiAgcGFkZGluZy1ib3R0b206IDMwcHg7XG4gIG1hcmdpbi10b3A6IDMwcHg7XG4gIGJvcmRlci10b3A6IDAuMDVyZW0gc29saWQgcmdiYSgwLDAsMCwwLjEpO1xufVxuXG4uZm9vdGVyIHNtYWxsIHtcbiAgZm9udC1zaXplOiAxMHB4O1xuICBmb250LXNpemU6IDAuNjI1cmVtO1xuICBmb250LXdlaWdodDogMTAwO1xuICBjb2xvcjogbGlnaHROYXZ5Q29sb3I7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbn1cblxuLmZvb3RlciAudGV4dC1sZWZ0IHtcbiAgZmxvYXQ6IGxlZnQ7XG59XG5cbi5mb290ZXIgLnRleHQtcmlnaHQge1xuICBmbG9hdDogcmlnaHQ7XG59XG5cbi50b29sc19fdGl0bGUge1xuICBmb250LXNpemU6IDI0cHg7XG4gIGZvbnQtc2l6ZTogMS41cmVtO1xuICBmb250LXdlaWdodDogNzAwO1xuICBjb2xvcjogIzlhOWVhNDtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xufVxuXG4udG9vbHNfX3RpdGxlOmJlZm9yZSB7XG4gIGNvbnRlbnQ6IGF0dHIodGl0bGUpO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHBvaW50ZXItZXZlbnRzOiBub25lO1xuICBsZWZ0OiAxNXB4O1xuICBib3R0b206IDE1cHg7XG4gIG9wYWNpdHk6IDAuMTI7XG4gIGZvbnQtc2l6ZTogMzJweDtcbiAgZm9udC1zaXplOiAycmVtO1xuICBmb250LXdlaWdodDogNzAwO1xuICBjb2xvcjogIzlhOWVhNDtcbiAgbGluZS1oZWlnaHQ6IDE7XG4gIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG59XG5cbi50b29sc19fdGl0bGU6YWZ0ZXIge1xuICBjb250ZW50OiAnJztcbiAgZGlzcGxheTogYmxvY2s7XG4gIGJvcmRlci1yYWRpdXM6IDVweDtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzNhMzgzODtcbiAgd2lkdGg6IDMwcHg7XG4gIGhlaWdodDogNHB4O1xufVxuXG4udG9vbHNDYXJkIHtcbiAgbWFyZ2luOiAwLjkzNzVyZW0gMDtcbiAgcGFkZGluZzogMCAwLjkzNzVyZW07XG4gIGZsZXg6IDEgMSAzMy4zMzMzMzMzMzMzMzMzMyU7XG59XG5cbi50b29sc0NhcmRfX2lubmVyIHtcbiAgd2lkdGg6IDEwMCU7XG4gIG1pbi1oZWlnaHQ6IDMzOXB4O1xuICBib3JkZXItcmFkaXVzOiAxMHB4O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmO1xuICBib3gtc2hhZG93OiAwIDAgMTBweCAwIHJnYmEoMCwwLDAsMC4wNSksIDAgNXB4IDIwcHggMCByZ2JhKDAsMCwwLDAuMDUpO1xuICB0cmFuc2l0aW9uOiAwLjJzIGJveC1zaGFkb3cgZWFzZSwgMC4ycyB0cmFuc2Zvcm0gZWFzZTtcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICBkaXNwbGF5OiBibG9jaztcbn1cblxuLnRvb2xzQ2FyZF9faW5uZXI6aG92ZXIsLnRvb2xzQ2FyZF9faW5uZXI6Zm9jdXMge1xuICBib3gtc2hhZG93OiAwIDEwcHggMzBweCAwIHJnYmEoMCwwLDAsMC4wNSksIDAgMTVweCA2MHB4IDAgcmdiYSgwLDAsMCwwLjA1KTtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGUzZCgwLCAtNXB4LCAwKTtcbn1cblxuLnRvb2xzQ2FyZF9fZmlndXJlIHtcbiAgbWFyZ2luOiAwO1xuICBwYWRkaW5nOiAwO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDE1MHB4O1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICBib3JkZXItcmFkaXVzOiAxMHB4IDEwcHggMCAwO1xuICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xuICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiA1MCU7XG4gIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XG59XG5cbi50b29sc0NhcmRfX3RpdGxlIHtcbiAgcGFkZGluZzogMC45Mzc1cmVtIDEuODc1cmVtIDAuNjI1cmVtO1xuICBtYXJnaW46IDA7XG4gIGZvbnQtc2l6ZTogMjJweDtcbiAgZm9udC1zaXplOiAxLjM3NXJlbTtcbiAgZm9udC13ZWlnaHQ6IDcwMDtcbiAgbGV0dGVyLXNwYWNpbmc6IDAuMnB4O1xuICBjb2xvcjogIzNhMzgzODtcbn1cblxuLnRvb2xzQ2FyZF9fZGVzYyB7XG4gIHBhZGRpbmc6IDAgMS44NzVyZW0gMC45Mzc1cmVtO1xuICBmb250LXNpemU6IDE2cHg7XG4gIGZvbnQtc2l6ZTogMXJlbTtcbiAgbGV0dGVyLXNwYWNpbmc6IDAuMXB4O1xuICBjb2xvcjogIzlhOWVhNDtcbiAgbWFyZ2luOiAwO1xuICBkaXNwbGF5OiBibG9jaztcbiAgZGlzcGxheTogLXdlYmtpdC1ib3g7XG4gIG1heC13aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiA0OHB4O1xuICBsaW5lLWhlaWdodDogMS41O1xuICAtd2Via2l0LWxpbmUtY2xhbXA6IDI7XG4gIC13ZWJraXQtYm94LW9yaWVudDogdmVydGljYWw7XG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIHRleHQtb3ZlcmZsb3c6IGVsbGlwc2lzO1xufVxuXG4udG9vbHNDYXJkX19mb290ZXIge1xuICBwYWRkaW5nOiAwLjkzNzVyZW0gMS44NzVyZW0gMS44NzVyZW07XG59XG5cbi50b29sc0NhcmRfX3VzZXIge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbG9hdDogbGVmdDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbn1cblxuLnRvb2xzQ2FyZF9fdXNlciBzcGFuIHtcbiAgbGluZS1oZWlnaHQ6IDE7XG59XG5cbi50b29sc0NhcmRfX3VzZXIgaW1nIHtcbiAgYm9yZGVyLXJhZGl1czogNHB4O1xuICBib3JkZXI6IHNvbGlkIDFweCAjOWE5ZWE0O1xuICBtYXJnaW4tcmlnaHQ6IDAuNjI1cmVtO1xufVxuXG4udG9vbHNDYXJkX191c2VyIHNtYWxsIHtcbiAgZm9udC1zaXplOiAxM3B4O1xuICBmb250LXNpemU6IDAuODEyNXJlbTtcbiAgY29sb3I6ICM5YTllYTQ7XG59XG5cbi50b29sc0NhcmRfX3VzZXIgc3Ryb25nIHtcbiAgZm9udC1zaXplOiAxNHB4O1xuICBmb250LXNpemU6IDAuODc1cmVtO1xuICBmb250LXdlaWdodDogNTAwO1xuICBjb2xvcjogIzMzMztcbn1cblxuLnRvb2xzQ2FyZF9fdXNlciBzbWFsbCwudG9vbHNDYXJkX191c2VyIHN0cm9uZyB7XG4gIGRpc3BsYXk6IGJsb2NrO1xufVxuXG4udG9vbHNDYXJkX19saW5rIHtcbiAgZmxvYXQ6IHJpZ2h0O1xufVxuXG4udG9vbHNDYXJkX19saW5rIHN2ZyB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB0b3A6IDAuNjI1cmVtO1xuICBtYXJnaW46IDA7XG4gIHBhZGRpbmc6IDA7XG59XG5cbi50b29sc19fbGlzdCB7XG4gIHBhZGRpbmc6IDA7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZmxvdzogcm93O1xuICBmbGV4LXdyYXA6IHdyYXA7XG4gIGZsZXgtZGlyZWN0aW9uOiByb3c7XG4gIGFsaWduLWl0ZW1zOiBmbGV4LXN0YXJ0O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWFyb3VuZDtcbiAgbWFyZ2luLXJpZ2h0OiAtMC45Mzc1cmVtO1xuICBtYXJnaW4tbGVmdDogLTAuOTM3NXJlbTtcbn1cblxuQG1lZGlhIG9ubHkgc2NyZWVuIHtcbiAgLmNvbnRhaW5lciB7XG4gICAgbWF4LXdpZHRoOiA3NjhweDtcbiAgfVxufVxuXG5AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDU3NnB4KSB7XG4gIC5tYWluIHtcbiAgICBwYWRkaW5nOiAxMjBweCAycmVtIDA7XG4gIH1cblxuICAucGFnaW5hdGlvbiBhLC5wYWdpbmF0aW9uIHNwYW4ge1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIHdpZHRoOiBhdXRvO1xuICB9XG5cbiAgLnBhZ2luYXRpb25fX3ByZXYge1xuICAgIGZsb2F0OiBsZWZ0O1xuICAgIGxlZnQ6IDA7XG4gIH1cblxuICAucGFnaW5hdGlvbl9fbmV4dCB7XG4gICAgZmxvYXQ6IHJpZ2h0O1xuICAgIHJpZ2h0OiAwO1xuICB9XG5cbiAgLnBhZ2luYXRpb25fX3ByZXYsLnBhZ2luYXRpb25fX25leHQge1xuICAgIHRvcDogMDtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgei1pbmRleDogMTA7XG4gIH1cblxuICAuaGVhZGVyX19uYXZiYXIge1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlM2QoMCwgMCwgMCk7XG4gICAgYm94LXNoYWRvdzogbm9uZTtcbiAgfVxuXG4gIC5oZWFkZXJfX25hdiB7XG4gICAgcGFkZGluZzogMDtcbiAgICBmbG9hdDogcmlnaHQ7XG4gIH1cblxuICAuaGVhZGVyX19uYXYtaXRlbSB7XG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICB9XG5cbiAgLnRvb2xzX190aXRsZTpiZWZvcmUge1xuICAgIGZvbnQtc2l6ZTogNDRweDtcbiAgICBmb250LXNpemU6IDIuNzVyZW07XG4gIH1cbn1cblxuQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA3NjhweCkge1xuICAubWFpbiB7XG4gICAgd2lkdGg6IGNhbGMoMTAwJSAtIDIwcmVtKTtcbiAgICBwYWRkaW5nOiAxMjBweCA2LjI1cmVtIDA7XG4gICAgbWFyZ2luLWxlZnQ6IDIwcmVtO1xuICB9XG5cbiAgLnRvZ2dsZU1lbnUge1xuICAgIGRpc3BsYXk6IG5vbmU7XG4gIH1cblxuICAudG9nZ2xlU2lkZWJhciB7XG4gICAgdHJhbnNpdGlvbjogbWFyZ2luIDAuNXMgY3ViaWMtYmV6aWVyKDAuNCwgMiwgMC42OCwgMSk7XG4gICAgdG9wOiA1cHg7XG4gICAgbWFyZ2luLWxlZnQ6IDIwcmVtO1xuICAgIHRyYW5zZm9ybTogcm90YXRlKDBkZWcpO1xuICB9XG5cbiAgaW5wdXQjdG9nZ2xlU2lkZWJhcjpjaGVja2VkIH4gLnNpZGViYXIge1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlM2QoLTEwMCUsIDAsIDApO1xuICB9XG5cbiAgaW5wdXQjdG9nZ2xlU2lkZWJhcjpjaGVja2VkIH4gLm1haW4saW5wdXQjdG9nZ2xlU2lkZWJhcjpjaGVja2VkIH4gLm1haW4gLmhlYWRlciB7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgbWFyZ2luLWxlZnQ6IDA7XG4gIH1cblxuICBpbnB1dCN0b2dnbGVTaWRlYmFyOmNoZWNrZWQgfiAudG9nZ2xlU2lkZWJhciB7XG4gICAgdHJhbnNmb3JtOiByb3RhdGUoMTgwZGVnKTtcbiAgICB0b3A6IDA7XG4gIH1cblxuICBpbnB1dCN0b2dnbGVTaWRlYmFyOmNoZWNrZWQgfiAudG9nZ2xlU2lkZWJhciBzdmcge1xuICAgIHN0cm9rZTogIzI2MjYyNjtcbiAgfVxuXG4gIC5oZWFkZXIge1xuICAgIHdpZHRoOiBjYWxjKDEwMCUgLSAyMHJlbSk7XG4gICAgbWFyZ2luLWxlZnQ6IDIwcmVtO1xuICB9XG5cbiAgLnNpZGViYXIge1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlM2QoMCwgMCwgMCk7XG4gIH1cbn1cblxuQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA5OTJweCkge1xuICAuY29udGFpbmVyIHtcbiAgICBtYXgtd2lkdGg6IDk5MnB4O1xuICB9XG59XG5cbkBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1pbi13aWR0aDogMTIwMHB4KSB7XG4gIC5jb250YWluZXIge1xuICAgIG1heC13aWR0aDogMTIwMHB4O1xuICB9XG59XG4iLCIkY2xlYXJmaXgsXG4uY2xlYXJmaXhcbiAgY2xlYXJmaXgoKVxuXG4uc2hvd1xuICBkaXNwbGF5IGJsb2NrXG4gIG9wYWNpdHkgMVxuICB2aXNpYmlsaXR5IHZpc2libGVcblxuLmhpZGVcbiAgZGlzcGxheSBub25lXG4gIG9wYWNpdHkgMFxuICB2aXNpYmlsaXR5IGhpZGRlblxuXG4ucHVsbFxuICAmLWxlZnRcbiAgICBmbG9hdCBsZWZ0XG4gICYtcmlnaHRcbiAgICBmbG9hdCByaWdodFxuXG4uc3Itb25seVxuICBwb3NpdGlvbiBhYnNvbHV0ZVxuICB3aWR0aCAxcHhcbiAgaGVpZ2h0IDFweFxuICBwYWRkaW5nIDBcbiAgbWFyZ2luIC0xcHhcbiAgb3ZlcmZsb3cgaGlkZGVuXG4gIGNsaXAgcmVjdCgwLCAwLCAwLCAwKVxuICBib3JkZXIgMFxuXG4udmlkZW8td3JhcHBlclxuICBwb3NpdGlvbiByZWxhdGl2ZVxuICBwYWRkaW5nLWJvdHRvbSA1Ni4yNSVcbiAgcGFkZGluZy10b3AgMjVweFxuICBoZWlnaHQgMFxuICBvYmplY3QsXG4gIGVtYmVkLFxuICBpZnJhbWVcbiAgICBwb3NpdGlvbiBhYnNvbHV0ZVxuICAgIHRvcCAwXG4gICAgbGVmdCAwXG4gICAgd2lkdGggMTAwJVxuICAgIGhlaWdodCAxMDAlXG4iLCIudG9vbHNfX2xpc3RcbiAgcGFkZGluZyAwXG4gIGRpc3BsYXkgZmxleFxuICBmbGV4LWZsb3cgcm93XG4gIGZsZXgtd3JhcCB3cmFwXG4gIGZsZXgtZGlyZWN0aW9uOiByb3dcbiAgYWxpZ24taXRlbXMgZmxleC1zdGFydFxuICBqdXN0aWZ5LWNvbnRlbnQgc3BhY2UtYXJvdW5kXG4gIG1hcmdpbi1yaWdodCAtKHRvUmVtKHNwYWNpbmdTbWFsbCkpXG4gIG1hcmdpbi1sZWZ0IC0odG9SZW0oc3BhY2luZ1NtYWxsKSlcbiIsImJvZHlcbiAgYmFja2dyb3VuZC1jb2xvciBiYWNrZ3JvdW5kQmFzZVxuXG5oclxuICBib3JkZXIgbm9uZVxuICBib3JkZXItYm90dG9tIGJvcmRlckJhc2VcbiAgbWFyZ2luIHNwYWNpbmdCYXNlIDBcblxuLmJhc2VcbiAgbWluLWhlaWdodCAxMDB2aFxuXG4ubWFpblxuICBiYWNrZ3JvdW5kLWNvbG9yIGJhY2tncm91bmRCYXNlXG4gIHBhZGRpbmcgMTIwcHggMXJlbSAwXG4gIHRyYW5zaXRpb24gYWxsIC4zcyBjdWJpYy1iZXppZXIoLjQsIDIsIC42OCwgMSlcbiAgd2lkdGggMTAwJVxuICBtYXJnaW4tbGVmdCAwXG4gIEBleHRlbmQgJGNsZWFyZml4XG4gICthYm92ZShwaG9uZS1zbSlcbiAgICBwYWRkaW5nIDEyMHB4IDJyZW0gMFxuICArYWJvdmUodGFibGV0LW1kKVxuICAgIHdpZHRoIGNhbGMoMTAwJSAtIDIwcmVtKVxuICAgIHBhZGRpbmcgMTIwcHggNi4yNXJlbSAwXG4gICAgbWFyZ2luLWxlZnQgMjByZW1cblxuLnRvZ2dsZU1lbnUsXG4udG9nZ2xlU2lkZWJhclxuICBiYWNrZ3JvdW5kIG5vbmUgdHJhbnNwYXJlbnRcbiAgYm9yZGVyIG5vbmVcbiAgcGFkZGluZyAxMHB4XG4gIGN1cnNvciBwb2ludGVyXG4gIHRyYW5zaXRpb24gYWxsIC41cyBjdWJpYy1iZXppZXIoLjQsIDIsIC42OCwgMSlcbiAgdHJhbnNmb3JtIHJvdGF0ZSgwZGVnKVxuICBzdmdcbiAgICBtYXJnaW4gMFxuICAgIHBhZGRpbmcgMFxuICAgIGxpbmUtaGVpZ2h0IDFcblxuLnRvZ2dsZU1lbnVcbiAgZmxvYXQgcmlnaHRcbiAgcG9zaXRpb24gcmVsYXRpdmVcbiAgei1pbmRleCAyMDBcbiAgK2Fib3ZlKHRhYmxldC1tZClcbiAgICBkaXNwbGF5IG5vbmVcblxuLnRvZ2dsZVNpZGViYXJcbiAgZmxvYXQgbGVmdFxuICB0cmFuc2Zvcm0gcm90YXRlKDE4MGRlZylcbiAgcG9zaXRpb24gZml4ZWRcbiAgdG9wIDBcbiAgbGVmdCAyMHB4XG4gIG1hcmdpbiAwXG4gIGxpbmUtaGVpZ2h0IDFcbiAgei1pbmRleCAzMDBcbiAgc3ZnXG4gICAgc3Ryb2tlIHRleHRDb2xvclxuICArYWJvdmUodGFibGV0LW1kKVxuICAgIHRyYW5zaXRpb24gbWFyZ2luIC41cyBjdWJpYy1iZXppZXIoLjQsIDIsIC42OCwgMSlcbiAgICB0b3AgNXB4XG4gICAgbWFyZ2luLWxlZnQgMjByZW1cbiAgICB0cmFuc2Zvcm0gcm90YXRlKDBkZWcpXG5cbmlucHV0I3RvZ2dsZU1lbnUsXG5pbnB1dCN0b2dnbGVTZWFyY2gsXG5pbnB1dCN0b2dnbGVTaWRlYmFyXG4gIEBleHRlbmQgLnNyLW9ubHlcblxuaW5wdXQjdG9nZ2xlTWVudVxuICAmOmNoZWNrZWRcbiAgICB+IC5oZWFkZXJfX25hdmJhclxuICAgICAgdHJhbnNmb3JtIHRyYW5zbGF0ZTNkKDAsIC0zNSUsIDApXG4gICAgLy8gfiAudG9nZ2xlTWVudVxuICAgIC8vICAgdHJhbnNmb3JtIHJvdGF0ZSg5MGRlZylcblxuaW5wdXQjdG9nZ2xlU2lkZWJhclxuICAmOmNoZWNrZWRcbiAgICB+IC5zaWRlYmFyXG4gICAgICB0cmFuc2Zvcm0gdHJhbnNsYXRlM2QoMCwgMCwgMClcbiAgICB+IC5tYWluLFxuICAgIH4gLm1haW4gLmhlYWRlclxuICAgICAgICB3aWR0aCBjYWxjKDEwMCUgLSAyMHJlbSlcbiAgICAgICAgbWFyZ2luLWxlZnQgMjByZW1cbiAgICB+IC50b2dnbGVTaWRlYmFyXG4gICAgICB0cmFuc2Zvcm0gcm90YXRlKDBkZWcpXG4gICAgICBtYXJnaW4tbGVmdCAwXG4gICAgICB0b3AgNXB4XG4gICAgfiAudG9nZ2xlU2lkZWJhciBzdmdcbiAgICAgIHN0cm9rZSAjZmZmXG4gICAgK2Fib3ZlKHRhYmxldC1tZClcbiAgICAgIH4gLnNpZGViYXJcbiAgICAgICAgdHJhbnNmb3JtIHRyYW5zbGF0ZTNkKC0xMDAlLCAwLCAwKVxuICAgICAgfiAubWFpbixcbiAgICAgIH4gLm1haW4gLmhlYWRlclxuICAgICAgICAgIHdpZHRoIDEwMCVcbiAgICAgICAgICBtYXJnaW4tbGVmdCAwXG4gICAgICB+IC50b2dnbGVTaWRlYmFyXG4gICAgICAgIHRyYW5zZm9ybSByb3RhdGUoMTgwZGVnKVxuICAgICAgICB0b3AgMFxuICAgICAgICBzdmdcbiAgICAgICAgICBzdHJva2UgdGV4dENvbG9yXG4iLCJiYXNlLWZvbnQtc2l6ZSA/PSAxNnB4XG5yYXN0ZXJpc2UtbWVkaWEtcXVlcmllcyA/PSBmYWxzZVxuXG5ydXB0dXJlID0ge1xuICByYXN0ZXJpc2UtbWVkaWEtcXVlcmllczogcmFzdGVyaXNlLW1lZGlhLXF1ZXJpZXNcbiAgbW9iaWxlLWN1dG9mZjogNDAwcHhcbiAgZGVza3RvcC1jdXRvZmY6IDEwNTBweFxuICBoZC1jdXRvZmY6IDE4MDBweFxuICBlbmFibGUtZW0tYnJlYWtwb2ludHM6IGZhbHNlXG4gIGJhc2UtZm9udC1zaXplOiBiYXNlLWZvbnQtc2l6ZVxuICBhbnRpLW92ZXJsYXA6IGZhbHNlXG4gIGRlbnNpdHktcXVlcmllczogJ2RwcHgnICd3ZWJraXQnICdtb3onICdkcGknXG4gIHJldGluYS1kZW5zaXR5OiAxLjVcbiAgdXNlLWRldmljZS13aWR0aDogZmFsc2Vcbn1cbnJ1cHR1cmUuc2NhbGUgPSAwIChydXB0dXJlLm1vYmlsZS1jdXRvZmYpIDYwMHB4IDgwMHB4IChydXB0dXJlLmRlc2t0b3AtY3V0b2ZmKSAocnVwdHVyZS5oZC1jdXRvZmYpXG5ydXB0dXJlLnNjYWxlLW5hbWVzID0gJ3hzJyAncycgJ20nICdsJyAneGwnICdoZCdcblxuLWlzLXN0cmluZyh2YWwpXG4gIGlmIHR5cGVvZih2YWwpIGlzIG5vdCAndW5pdCdcbiAgICBpZiB2YWwgaXMgYSAnc3RyaW5nJyBvciB2YWwgaXMgYSAnaWRlbnQnXG4gICAgICB0cnVlXG4gICAgZWxzZVxuICAgICAgZmFsc2VcbiAgZWxzZVxuICAgIGZhbHNlXG5cbi1nZXQtc2NhbGUtbnVtYmVyKHNjYWxlLW5hbWUpXG4gIGZvciBsaXN0LWl0ZW0sIGkgaW4gcnVwdHVyZS5zY2FsZS1uYW1lc1xuICAgIGlmIGxpc3QtaXRlbSBpcyBzY2FsZS1uYW1lXG4gICAgICByZXR1cm4gaSArIDFcbiAgcmV0dXJuIGZhbHNlXG5cbi1jb252ZXJ0LXRvKHRvLXVuaXQsIHZhbHVlLCBjb250ZXh0ID0gcnVwdHVyZS5iYXNlLWZvbnQtc2l6ZSlcbiAgZnJvbS11bml0ID0gdW5pdCh2YWx1ZSlcbiAgcmV0dXJuIHZhbHVlIGlmIHRvLXVuaXQgaXMgZnJvbS11bml0XG4gIGlmIHRvLXVuaXQgaW4gKCdlbScgJ3JlbScpXG4gICAgcmV0dXJuIHZhbHVlIGlmIGZyb20tdW5pdCBpbiAoJ2VtJyAncmVtJylcbiAgICByZXR1cm4gdW5pdCgodmFsdWUgLyBjb250ZXh0KSwgdG8tdW5pdClcbiAgaWYgdG8tdW5pdCBpcyAncHgnXG4gICAgcmV0dXJuIHVuaXQoKHZhbHVlICogY29udGV4dCksICdweCcpXG5cbi1vbi1zY2FsZShuKVxuICByZXR1cm4gdW5pdChuKSBpcyAnJ1xuXG4tbGFyZ2VyLXRoYW4tc2NhbGUobilcbiAgcmV0dXJuIChuID4gKGxlbmd0aChydXB0dXJlLnNjYWxlKSAtIDEpKSBhbmQgLW9uLXNjYWxlKG4pXG5cbi1pcy16ZXJvKG4pXG4gIHJldHVybiBuIGlzIDBcblxuLW92ZXJsYXAtc2hpZnQoYW50aS1vdmVybGFwLCBuKVxuICBzaGlmdC11bml0ID0gdW5pdChuKVxuICBhbnRpLW92ZXJsYXAgPSAwcHggdW5sZXNzIGFudGktb3ZlcmxhcFxuICBhbnRpLW92ZXJsYXAgPSAxcHggaWYgYW50aS1vdmVybGFwIGlzIHRydWVcbiAgaWYgbGVuZ3RoKGFudGktb3ZlcmxhcCkgaXMgMVxuICAgIHJldHVybiAtY29udmVydC10byhzaGlmdC11bml0LCBhbnRpLW92ZXJsYXApXG4gIGZvciB2YWwgaW4gYW50aS1vdmVybGFwXG4gICAgcmV0dXJuIHZhbCBpZiB1bml0KHZhbCkgaXMgc2hpZnQtdW5pdFxuXG4tYWRqdXN0LW92ZXJsYXAoYW50aS1vdmVybGFwLCBuLCBzaWRlID0gJ21pbicpXG4gIC1zaGlmdCA9IC1vdmVybGFwLXNoaWZ0KGFudGktb3ZlcmxhcCwgbilcbiAgaWYgKHNpZGUgaXMgJ21pbicgYW5kIC1zaGlmdCA+IDApIG9yIChzaWRlIGlzICdtYXgnIGFuZCAtc2hpZnQgPCAwKVxuICAgIG4gPSBuICsgLXNoaWZ0XG4gIHJldHVybiBuXG5cbi1pcy1wb3NpdGl2ZShuKVxuICByZXR1cm4gbiA+PSAwXG5cbi1kZW5zaXR5LXF1ZXJpZXMoZGVuc2l0eSlcbiAgaWYgdHlwZW9mKGRlbnNpdHkpIGlzIG5vdCAndW5pdCdcbiAgICBpZiBub3QgLWlzLXN0cmluZyhkZW5zaXR5KVxuICAgICAgZGVuc2l0eSA9ICclcycgJSBkZW5zaXR5XG4gIGRlbnNpdHkgPSBydXB0dXJlLnJldGluYS1kZW5zaXR5IGlmIGRlbnNpdHkgaXMgJ3JldGluYSdcbiAgcXVlcmllcyA9ICgpXG4gIGZvciBxdWVyeSBpbiBydXB0dXJlLmRlbnNpdHktcXVlcmllc1xuICAgIGlmIHF1ZXJ5IGlzICd3ZWJraXQnXG4gICAgICBwdXNoKHF1ZXJpZXMsICcoLXdlYmtpdC1taW4tZGV2aWNlLXBpeGVsLXJhdGlvOiAlcyknICUgKGRlbnNpdHkpKVxuICAgIGVsc2UgaWYgcXVlcnkgaXMgJ21veidcbiAgICAgIHB1c2gocXVlcmllcywgJyhtaW4tLW1vei1kZXZpY2UtcGl4ZWwtcmF0aW86ICVzKScgJSAoZGVuc2l0eSkpXG4gICAgZWxzZSBpZiBxdWVyeSBpcyAnbydcbiAgICAgIHB1c2gocXVlcmllcywgJygtby1taW4tZGV2aWNlLXBpeGVsLXJhdGlvOiAlcy8xKScgJSAoZGVuc2l0eSkpXG4gICAgZWxzZSBpZiBxdWVyeSBpcyAncmF0aW8nXG4gICAgICBwdXNoKHF1ZXJpZXMsICcobWluLWRldmljZS1waXhlbC1yYXRpbzogJXMpJyAlIChkZW5zaXR5KSlcbiAgICBlbHNlIGlmIHF1ZXJ5IGlzICdkcGknXG4gICAgICBpZiAtaXMtc3RyaW5nKGRlbnNpdHkpXG4gICAgICAgIGRlbnNpdHk9Y29udmVydChkZW5zaXR5KVxuICAgICAgcHVzaChxdWVyaWVzLCAnKG1pbi1yZXNvbHV0aW9uOiAlc2RwaSknICUgKHJvdW5kKGRlbnNpdHkgKiA5NiwgMSkpKVxuICAgIGVsc2UgaWYgcXVlcnkgaXMgJ2RwcHgnXG4gICAgICBwdXNoKHF1ZXJpZXMsICcobWluLXJlc29sdXRpb246ICVzZHBweCknICUgKGRlbnNpdHkpKVxuICByZXR1cm4gcXVlcmllc1xuXG5jcmVhdGUtZmFsbGJhY2stY2xhc3Moc2VsZWN0ZWQsIGNsYXNzKVxuICAveycnICsgY2xhc3MgKyAnICcgKyBzZWxlY3RlZH1cbiAgICB7YmxvY2t9XG5cbi8vICtiZXR3ZWVuKG1pbiwgbWF4KVxuLy8gdXNhZ2UgKHNjYWxlIGNhbiBiZSBtaXhlZCB3aXRoIGN1c3RvbSB2YWx1ZXMpOlxuLy8gICAtICtiZXR3ZWVuKDEsIDMpIHNjYWxlOnNjYWxlXG4vLyAgIC0gK2JldHdlZW4oMCwgMykgMCB3aWR0aDpzY2FsZVxuLy8gICAtICtiZXR3ZWVuKDIwMHB4LCA1MDBweCkgY3VzdG9tOmN1c3RvbVxuLy8gICAtICtiZXR3ZWVuKDAsIDMwMHB4KSAwIHdpZHRoOmN1c3RvbVxuLy8gICAtICtiZXR3ZWVuKDEsIDMwMHB4KSBzY2FsZTpjdXN0b21cbi8vICAgLSArYmV0d2VlbigyMDBweCwgNCkgY3VzdG9tOnNjYWxlXG5cbmJldHdlZW4obWluLCBtYXgsIGFudGktb3ZlcmxhcCA9IHJ1cHR1cmUuYW50aS1vdmVybGFwLCBkZW5zaXR5ID0gbnVsbCwgb3JpZW50YXRpb24gPSBudWxsLCB1c2UtZGV2aWNlLXdpZHRoID0gcnVwdHVyZS51c2UtZGV2aWNlLXdpZHRoLCBmYWxsYmFjay1jbGFzcyA9IG51bGwpXG4gIHNlbGVjdGVkID0gc2VsZWN0b3IoKVxuXG4gIGlmIC1pcy1zdHJpbmcob3JpZW50YXRpb24pXG4gICAgb3JpZW50YXRpb24gPSBjb252ZXJ0KG9yaWVudGF0aW9uKVxuICBpZiAtaXMtc3RyaW5nKGRlbnNpdHkpXG4gICAgZGVuc2l0eSA9IGNvbnZlcnQoZGVuc2l0eSlcbiAgaWYgLWlzLXN0cmluZyhtaW4pXG4gICAgbWluID0gLWdldC1zY2FsZS1udW1iZXIobWluKVxuICBpZiAtaXMtc3RyaW5nKG1heClcbiAgICBtYXggPSAtZ2V0LXNjYWxlLW51bWJlcihtYXgpXG5cbiAgLW1pbiA9IHJ1cHR1cmUuc2NhbGVbbWluIC0gMV0gdW5sZXNzIC1pcy16ZXJvKG1pbikgb3IgKG5vdCAtb24tc2NhbGUobWluKSlcbiAgLW1heCA9IHJ1cHR1cmUuc2NhbGVbbWF4XSB1bmxlc3Mgbm90IC1vbi1zY2FsZShtYXgpXG4gIC1taW4gPz0gbWluXG4gIC1tYXggPz0gbWF4XG5cbiAgaWYgKHJ1cHR1cmUucmFzdGVyaXNlLW1lZGlhLXF1ZXJpZXMpXG4gICAgaWYgbm90IChkZW5zaXR5IG9yIC1tYXggb3Igb3JpZW50YXRpb24pXG4gICAgICB7YmxvY2t9XG4gIGVsc2VcbiAgICBjb25kaXRpb24gPSAnb25seSBzY3JlZW4nXG4gICAgdXNlLWRldmljZS13aWR0aCA9IHVzZS1kZXZpY2Utd2lkdGggPyAnZGV2aWNlLScgOiAnJ1xuICAgIHVubGVzcyAtbWluIGlzIDBcbiAgICAgIC1taW4gPSAtY29udmVydC10bygnZW0nLCAtbWluKSBpZiBydXB0dXJlLmVuYWJsZS1lbS1icmVha3BvaW50c1xuICAgICAgLW1pbiA9IC1hZGp1c3Qtb3ZlcmxhcChhbnRpLW92ZXJsYXAsIC1taW4sIHNpZGU6ICdtaW4nKVxuICAgICAgY29uZGl0aW9uID0gY29uZGl0aW9uICsgJyBhbmQgKG1pbi0nICsgdXNlLWRldmljZS13aWR0aCArICd3aWR0aDogJXMpJyAlICgtbWluKVxuICAgIHVubGVzcyAtbGFyZ2VyLXRoYW4tc2NhbGUobWF4KVxuICAgICAgLW1heCA9IC1jb252ZXJ0LXRvKCdlbScsIC1tYXgpIGlmIHJ1cHR1cmUuZW5hYmxlLWVtLWJyZWFrcG9pbnRzXG4gICAgICAtbWF4ID0gLWFkanVzdC1vdmVybGFwKGFudGktb3ZlcmxhcCwgLW1heCwgc2lkZTogJ21heCcpXG4gICAgICBjb25kaXRpb24gPSBjb25kaXRpb24gKyAnIGFuZCAobWF4LScgKyB1c2UtZGV2aWNlLXdpZHRoICsgJ3dpZHRoOiAlcyknICUgKC1tYXgpXG4gICAgaWYgb3JpZW50YXRpb25cbiAgICAgIGNvbmRpdGlvbiA9IGNvbmRpdGlvbiArICcgYW5kIChvcmllbnRhdGlvbjogJXMpJyAlIChvcmllbnRhdGlvbilcbiAgICBpZiBkZW5zaXR5XG4gICAgICBjb25kaXRpb25zID0gKClcbiAgICAgIGZvciBxdWVyeSBpbiAtZGVuc2l0eS1xdWVyaWVzKGRlbnNpdHkpXG4gICAgICAgIHB1c2goY29uZGl0aW9ucywgY29uZGl0aW9uICsgJyBhbmQgJXMnICUgKHF1ZXJ5KSlcbiAgICAgIGNvbmRpdGlvbiA9IGpvaW4oJywgJywgY29uZGl0aW9ucylcbiAgICBAbWVkaWEgY29uZGl0aW9uXG4gICAgICB7YmxvY2t9XG4gIGlmIGZhbGxiYWNrLWNsYXNzXG4gICAgK2NyZWF0ZS1mYWxsYmFjay1jbGFzcyhzZWxlY3RlZCwgZmFsbGJhY2stY2xhc3MpXG4gICAgICB7YmxvY2t9XG5cbmF0KHNjYWxlLXBvaW50LCBhbnRpLW92ZXJsYXAgPSBydXB0dXJlLmFudGktb3ZlcmxhcCwgZGVuc2l0eSA9IG51bGwsIG9yaWVudGF0aW9uID0gbnVsbCwgdXNlLWRldmljZS13aWR0aCA9IHJ1cHR1cmUudXNlLWRldmljZS13aWR0aCwgZmFsbGJhY2stY2xhc3MgPSBudWxsKVxuICBpZiAtaXMtc3RyaW5nKG9yaWVudGF0aW9uKVxuICAgIG9yaWVudGF0aW9uID0gY29udmVydChvcmllbnRhdGlvbilcbiAgaWYgLWlzLXN0cmluZyhkZW5zaXR5KVxuICAgIGRlbnNpdHkgPSBjb252ZXJ0KGRlbnNpdHkpXG4gICtiZXR3ZWVuKHNjYWxlLXBvaW50LCBzY2FsZS1wb2ludCwgYW50aS1vdmVybGFwLCBkZW5zaXR5LCBvcmllbnRhdGlvbiwgdXNlLWRldmljZS13aWR0aCwgZmFsbGJhY2stY2xhc3MpXG4gICAge2Jsb2NrfVxuXG5mcm9tLXdpZHRoKHNjYWxlLXBvaW50LCBhbnRpLW92ZXJsYXAgPSBydXB0dXJlLmFudGktb3ZlcmxhcCwgZGVuc2l0eSA9IG51bGwsIG9yaWVudGF0aW9uID0gbnVsbCwgdXNlLWRldmljZS13aWR0aCA9IHJ1cHR1cmUudXNlLWRldmljZS13aWR0aCwgZmFsbGJhY2stY2xhc3MgPSBudWxsKVxuICBpZiAtaXMtc3RyaW5nKG9yaWVudGF0aW9uKVxuICAgIG9yaWVudGF0aW9uID0gY29udmVydChvcmllbnRhdGlvbilcbiAgaWYgLWlzLXN0cmluZyhkZW5zaXR5KVxuICAgIGRlbnNpdHkgPSBjb252ZXJ0KGRlbnNpdHkpXG4gICtiZXR3ZWVuKHNjYWxlLXBvaW50LCBsZW5ndGgocnVwdHVyZS5zY2FsZSksIGFudGktb3ZlcmxhcCwgZGVuc2l0eSwgb3JpZW50YXRpb24sIHVzZS1kZXZpY2Utd2lkdGgsIGZhbGxiYWNrLWNsYXNzKVxuICAgIHtibG9ja31cblxuYWJvdmUgPSBmcm9tLXdpZHRoXG5cbnRvLXdpZHRoKHNjYWxlLXBvaW50LCBhbnRpLW92ZXJsYXAgPSBydXB0dXJlLmFudGktb3ZlcmxhcCwgZGVuc2l0eSA9IG51bGwsIG9yaWVudGF0aW9uID0gbnVsbCwgdXNlLWRldmljZS13aWR0aCA9IHJ1cHR1cmUudXNlLWRldmljZS13aWR0aCwgZmFsbGJhY2stY2xhc3MgPSBudWxsKVxuICBpZiAtaXMtc3RyaW5nKG9yaWVudGF0aW9uKVxuICAgIG9yaWVudGF0aW9uID0gY29udmVydChvcmllbnRhdGlvbilcbiAgaWYgLWlzLXN0cmluZyhkZW5zaXR5KVxuICAgIGRlbnNpdHkgPSBjb252ZXJ0KGRlbnNpdHkpXG4gICtiZXR3ZWVuKDEsIHNjYWxlLXBvaW50LCBhbnRpLW92ZXJsYXAsIGRlbnNpdHksIG9yaWVudGF0aW9uLCB1c2UtZGV2aWNlLXdpZHRoLCBmYWxsYmFjay1jbGFzcylcbiAgICB7YmxvY2t9XG5cbmJlbG93ID0gdG8td2lkdGhcblxubW9iaWxlKGFudGktb3ZlcmxhcCA9IHJ1cHR1cmUuYW50aS1vdmVybGFwLCBkZW5zaXR5ID0gbnVsbCwgb3JpZW50YXRpb24gPSBudWxsLCB1c2UtZGV2aWNlLXdpZHRoID0gcnVwdHVyZS51c2UtZGV2aWNlLXdpZHRoLCBmYWxsYmFjay1jbGFzcyA9IG51bGwpXG4gIGlmIC1pcy1zdHJpbmcob3JpZW50YXRpb24pXG4gICAgb3JpZW50YXRpb24gPSBjb252ZXJ0KG9yaWVudGF0aW9uKVxuICBpZiAtaXMtc3RyaW5nKGRlbnNpdHkpXG4gICAgZGVuc2l0eSA9IGNvbnZlcnQoZGVuc2l0eSlcbiAgK2JlbG93KHJ1cHR1cmUubW9iaWxlLWN1dG9mZiwgYW50aS1vdmVybGFwLCBkZW5zaXR5LCBvcmllbnRhdGlvbiwgdXNlLWRldmljZS13aWR0aCwgZmFsbGJhY2stY2xhc3MpXG4gICAge2Jsb2NrfVxuXG50YWJsZXQoYW50aS1vdmVybGFwID0gcnVwdHVyZS5hbnRpLW92ZXJsYXAsIGRlbnNpdHkgPSBudWxsLCBvcmllbnRhdGlvbiA9IG51bGwsIHVzZS1kZXZpY2Utd2lkdGggPSBydXB0dXJlLnVzZS1kZXZpY2Utd2lkdGgsIGZhbGxiYWNrLWNsYXNzID0gbnVsbClcbiAgaWYgLWlzLXN0cmluZyhvcmllbnRhdGlvbilcbiAgICBvcmllbnRhdGlvbiA9IGNvbnZlcnQob3JpZW50YXRpb24pXG4gIGlmIC1pcy1zdHJpbmcoZGVuc2l0eSlcbiAgICBkZW5zaXR5ID0gY29udmVydChkZW5zaXR5KVxuICArYmV0d2VlbihydXB0dXJlLm1vYmlsZS1jdXRvZmYsIHJ1cHR1cmUuZGVza3RvcC1jdXRvZmYsIGFudGktb3ZlcmxhcCwgZGVuc2l0eSwgb3JpZW50YXRpb24sIHVzZS1kZXZpY2Utd2lkdGgsIGZhbGxiYWNrLWNsYXNzKVxuICAgIHtibG9ja31cblxuZGVza3RvcChhbnRpLW92ZXJsYXAgPSBydXB0dXJlLmFudGktb3ZlcmxhcCwgZGVuc2l0eSA9IG51bGwsIG9yaWVudGF0aW9uID0gbnVsbCwgdXNlLWRldmljZS13aWR0aCA9IHJ1cHR1cmUudXNlLWRldmljZS13aWR0aCwgZmFsbGJhY2stY2xhc3MgPSBudWxsKVxuICBpZiAtaXMtc3RyaW5nKG9yaWVudGF0aW9uKVxuICAgIG9yaWVudGF0aW9uID0gY29udmVydChvcmllbnRhdGlvbilcbiAgaWYgLWlzLXN0cmluZyhkZW5zaXR5KVxuICAgIGRlbnNpdHkgPSBjb252ZXJ0KGRlbnNpdHkpXG4gICthYm92ZShydXB0dXJlLmRlc2t0b3AtY3V0b2ZmLCBhbnRpLW92ZXJsYXAsIGRlbnNpdHksIG9yaWVudGF0aW9uLCB1c2UtZGV2aWNlLXdpZHRoLCBmYWxsYmFjay1jbGFzcylcbiAgICB7YmxvY2t9XG5cbmhkKGFudGktb3ZlcmxhcCA9IHJ1cHR1cmUuYW50aS1vdmVybGFwLCBkZW5zaXR5ID0gbnVsbCwgb3JpZW50YXRpb24gPSBudWxsLCB1c2UtZGV2aWNlLXdpZHRoID0gcnVwdHVyZS51c2UtZGV2aWNlLXdpZHRoLCBmYWxsYmFjay1jbGFzcyA9IG51bGwpXG4gIGlmIC1pcy1zdHJpbmcob3JpZW50YXRpb24pXG4gICAgb3JpZW50YXRpb24gPSBjb252ZXJ0KG9yaWVudGF0aW9uKVxuICBpZiAtaXMtc3RyaW5nKGRlbnNpdHkpXG4gICAgZGVuc2l0eSA9IGNvbnZlcnQoZGVuc2l0eSlcbiAgK2Fib3ZlKHJ1cHR1cmUuaGQtY3V0b2ZmLCBhbnRpLW92ZXJsYXAsIGRlbnNpdHksIG9yaWVudGF0aW9uLCB1c2UtZGV2aWNlLXdpZHRoLCBmYWxsYmFjay1jbGFzcylcbiAgICB7YmxvY2t9XG5cbmRlbnNpdHkoZGVuc2l0eSwgb3JpZW50YXRpb24gPSBudWxsLCBmYWxsYmFjay1jbGFzcyA9IG51bGwpXG4gIHNlbGVjdGVkID0gc2VsZWN0b3IoKVxuICBpZiBub3QgKHJ1cHR1cmUucmFzdGVyaXNlLW1lZGlhLXF1ZXJpZXMpXG4gICAgY29uZGl0aW9ucyA9ICgpXG4gICAgZm9yIHF1ZXJ5IGluIC1kZW5zaXR5LXF1ZXJpZXMoZGVuc2l0eSlcbiAgICAgIGNvbmRpdGlvbiA9ICdvbmx5IHNjcmVlbiBhbmQgJXMnICUgKHF1ZXJ5KVxuICAgICAgaWYgb3JpZW50YXRpb25cbiAgICAgICAgY29uZGl0aW9uID0gY29uZGl0aW9uICsgJyBhbmQgKG9yaWVudGF0aW9uOiAlcyknICUgKG9yaWVudGF0aW9uKVxuICAgICAgcHVzaChjb25kaXRpb25zLCBjb25kaXRpb24pXG4gICAgY29uZGl0aW9uID0gam9pbignLCAnLCBjb25kaXRpb25zKVxuICAgIEBtZWRpYSBjb25kaXRpb25cbiAgICAgIHtibG9ja31cbiAgICBpZiBmYWxsYmFjay1jbGFzc1xuICAgICAgK2NyZWF0ZS1mYWxsYmFjay1jbGFzcyhzZWxlY3RlZCwgZmFsbGJhY2stY2xhc3MpXG4gICAgICAgIHtibG9ja31cblxucGl4ZWwtcmF0aW8gPSBkZW5zaXR5XG5cbnJldGluYShvcmllbnRhdGlvbiA9IG51bGwsIGZhbGxiYWNrLWNsYXNzID0gbnVsbClcbiAgK2RlbnNpdHkoJ3JldGluYScsIG9yaWVudGF0aW9uLCBmYWxsYmFjay1jbGFzcylcbiAgICB7YmxvY2t9XG5cbmxhbmRzY2FwZShkZW5zaXR5ID0gbnVsbCwgZmFsbGJhY2stY2xhc3MgPSBudWxsKVxuICBzZWxlY3RlZCA9IHNlbGVjdG9yKClcbiAgaWYgbm90IChydXB0dXJlLnJhc3RlcmlzZS1tZWRpYS1xdWVyaWVzKVxuICAgIGlmIC1pcy1zdHJpbmcoZGVuc2l0eSlcbiAgICAgIGRlbnNpdHkgPSBjb252ZXJ0KGRlbnNpdHkpXG4gICAgaWYgZGVuc2l0eVxuICAgICAgK3BpeGVsLXJhdGlvKGRlbnNpdHksIG9yaWVudGF0aW9uOiBsYW5kc2NhcGUsIGZhbGxiYWNrLWNsYXNzKVxuICAgICAgICB7YmxvY2t9XG4gICAgZWxzZVxuICAgICAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAob3JpZW50YXRpb246IGxhbmRzY2FwZSlcbiAgICAgICAge2Jsb2NrfVxuICAgICAgaWYgZmFsbGJhY2stY2xhc3NcbiAgICAgICAgK2NyZWF0ZS1mYWxsYmFjay1jbGFzcyhzZWxlY3RlZCwgZmFsbGJhY2stY2xhc3MpXG4gICAgICAgICAge2Jsb2NrfVxuXG5wb3J0cmFpdChkZW5zaXR5ID0gbnVsbCwgZmFsbGJhY2stY2xhc3MgPSBudWxsKVxuICBzZWxlY3RlZCA9IHNlbGVjdG9yKClcbiAgaWYgbm90IChydXB0dXJlLnJhc3RlcmlzZS1tZWRpYS1xdWVyaWVzKVxuICAgIGlmIC1pcy1zdHJpbmcoZGVuc2l0eSlcbiAgICAgIGRlbnNpdHkgPSBjb252ZXJ0KGRlbnNpdHkpXG4gICAgaWYgZGVuc2l0eVxuICAgICAgK3BpeGVsLXJhdGlvKGRlbnNpdHksIG9yaWVudGF0aW9uOiBwb3J0cmFpdCwgZmFsbGJhY2stY2xhc3MpXG4gICAgICAgIHtibG9ja31cbiAgICBlbHNlXG4gICAgICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChvcmllbnRhdGlvbjogcG9ydHJhaXQpXG4gICAgICAgIHtibG9ja31cbiAgICAgIGlmIGZhbGxiYWNrLWNsYXNzXG4gICAgICAgICtjcmVhdGUtZmFsbGJhY2stY2xhc3Moc2VsZWN0ZWQsIGZhbGxiYWNrLWNsYXNzKVxuICAgICAgICAgIHtibG9ja31cbiIsImh0bWxcbiAgZm9udC1zaXplIGZvbnRTaXplQmFzZVxuXG5ib2R5XG4gIGNvbG9yIHRleHRDb2xvclxuICBmb250LWZhbWlseSBmb250RmFtaWx5QmFzZVxuICBmb250LXdlaWdodCBmb250V2VpZ2h0UmVndWxhclxuICBmb250LXNpemUgZm9udFNpemVCYXNlXG4gIGxpbmUtaGVpZ2h0IGxpbmVIZWlnaHRCYXNlXG5cbmgxLFxuaDIsXG5oMyxcbmg0LFxuaDUsXG5oNixcbnVsLFxucFxuICBtYXJnaW4gdG9SZW0oc3BhY2luZ1NtYWxsKSAwXG4gICY6Zmlyc3QtY2hpbGRcbiAgICBtYXJnaW4tdG9wIDBcbiAgJjpsYXN0LWNoaWxkXG4gICAgbWFyZ2luLWJvdHRvbSAwXG5cbnBcbiAgJi5sZWFkXG4gICAgdGV4dC1hbGlnbiBjZW50ZXJcbiAgICBwYWRkaW5nLWJvdHRvbSBzcGFjaW5nTGFyZ2VcbiAgICBmb250LXNpemU6IGZvbnRTaXplQmFzZSAqIDEuMlxuICAgIGZvbnQtd2VpZ2h0IDMwMFxuICAgIHNwYW5cbiAgICAgIG1hcmdpbi1ib3R0b20gdG9SZW0oc3BhY2luZ1NtYWxsKVxuICAgICAgZGlzcGxheSBibG9ja1xuaDFcbiAgZm9udC1zaXplIGZvbnRTaXplQmFzZSAqIDJcbmgyXG4gIGZvbnQtc2l6ZSBmb250U2l6ZUJhc2UgKiAxLjZcbmgzXG4gIGZvbnQtc2l6ZSBmb250U2l6ZUJhc2UgKiAxLjRcbmg0XG4gIGZvbnQtc2l6ZSBmb250U2l6ZUJhc2UgKiAxLjJcbmg1LCBoNlxuICBmb250LXNpemUgZm9udFNpemVCYXNlICogMVxuXG5hXG4gIGNvbG9yIGxpbmtDb2xvclxuICB0ZXh0LWRlY29yYXRpb24gdW5kZXJsaW5lXG4gICY6aG92ZXIsXG4gICY6Zm9jdXNcbiAgICBjb2xvciBsaW5rQ29sb3JIb3ZlclxuICAgIHRleHQtZGVjb3JhdGlvbiBub25lXG4gICY6Zm9jdXNcbiAgICBvdXRsaW5lOiAzcHggc29saWQgcmdiYShsaW5rQ29sb3IsIC43KVxuICAgIG91dGxpbmUtb2Zmc2V0OiAzcHhcbiIsImZvbnQtc2l6ZShzaXplKVxuICBmb250LXNpemUgc2l6ZVxuICBmb250LXNpemUgdG9SZW0oc2l6ZSlcbiIsImh0bWxcbiAgYm94LXNpemluZyBib3JkZXItYm94XG5cbiosICo6YmVmb3JlLCAmOmFmdGVyXG4gIGJveC1zaXppbmcgaW5oZXJpdFxuXG4uY29udGFpbmVyXG4gIGNlbnRlcigxMDAlKVxuICBwYWRkaW5nLXJpZ2h0IChndXR0ZXIgLyAyKVxuICBwYWRkaW5nLWxlZnQgKGd1dHRlciAvIDIpXG4gIEBleHRlbmQgLmNsZWFyZml4XG4gICthYm92ZShtdGFibGV0LW1kKVxuICAgIG1heC13aWR0aCB0YWJsZXQtbWRcbiAgK2Fib3ZlKGRlc2t0b3AtbGcpXG4gICAgbWF4LXdpZHRoIGRlc2t0b3AtbGdcbiAgK2Fib3ZlKGRlc2t0b3AteGwpXG4gICAgbWF4LXdpZHRoIGRlc2t0b3AteGxcblxuLnJvd1xuICBtYXJnaW4tbGVmdCAtKGd1dHRlciAvIDIpXG4gIG1hcmdpbi1yaWdodCAtKGd1dHRlciAvIDIpXG4gIEBleHRlbmQgLmNsZWFyZml4XG5cbi5ncmlkLWZsZXhcbiAgZGlzcGxheSBmbGV4XG4gIEBleHRlbmQgLnJvd1xuICAmLS1mbG93XG4gICAgZmxleC1mbG93IHJvd1xuICAmLS13cmFwXG4gICAgZmxleC13cmFwIHdyYXBcbiAgJi0tc3BhY2UtYXJvdW5kXG4gICAganVzdGlmeS1jb250ZW50IHNwYWNlLWFyb3VuZFxuICAmLS1jZW50ZXJcbiAgICBqdXN0aWZ5LWNvbnRlbnQgY2VudGVyXG4gICAgYWxpZ24taXRlbXMgY2VudGVyXG4gICYtLXJldmVyc2VcbiAgICBmbGV4LXdyYXAgd3JhcC1yZXZlcnNlXG4gICZfX2NvbHVtblxuICAgIGZsZXggMVxuICAgIHdpZHRoIDEwMCVcbiAgICBkaXNwbGF5IGlubGluZS1ibG9ja1xuICAgIHBhZGRpbmctbGVmdCAoZ3V0dGVyIC8gMilcbiAgICBwYWRkaW5nLXJpZ2h0IChndXR0ZXIgLyAyKVxuICAmLS1maXQgPiAuZ3JpZC1mbGV4X19jb2x1bW5cbiAgICBmbGV4IDFcbiAgJi0tZnVsbCA+IC5ncmlkLWZsZXhfX2NvbHVtblxuICAgIGZsZXggMCAwIDEwMCVcbiAgJi0tMW9mMiA+IC5ncmlkLWZsZXhfX2NvbHVtblxuICAgIGZsZXggMCAwIDUwJVxuICAmLS0xb2YzID4gLmdyaWQtZmxleF9fY29sdW1uXG4gICAgZmxleCAwIDAgMzMuMzMzMyVcbiAgJi0tMW9mNCA+IC5ncmlkLWZsZXhfX2NvbHVtblxuICAgIGZsZXggMCAwIDI1JVxuIiwiLmJ1dHRvblxuICBkaXNwbGF5IGlubGluZS1ibG9ja1xuICB0ZXh0LWRlY29yYXRpb24gbm9uZVxuICB0ZXh0LWFsaWduIGNlbnRlclxuICB0ZXh0LXRyYW5zZm9ybSBub25lXG4gIGZvbnQtc2l6ZSAxNHB4XG4gIHBhZGRpbmcgLjc1cmVtIDEuMjVyZW1cbiAgbWFyZ2luIDAgLjVyZW1cbiAgZm9udC13ZWlnaHQgNTAwXG4gIGNvbG9yICM5YTllYTRcbiAgYmFja2dyb3VuZCBub25lIHRyYW5zcGFyZW50XG4gIGJvcmRlci1yYWRpdXMgLjI1cmVtXG4gIGJvcmRlciAxcHggc29saWQgdHJhbnNwYXJlbnRcbiAgY3Vyc29yIHBvaW50ZXJcbiAgLXdlYmtpdC1hcHBlYXJhbmNlIG5vbmVcbiAgYXBwZWFyYW5jZSBub25lXG4gIG92ZXJmbG93IHZpc2libGVcbiAgbGluZS1oZWlnaHQgMVxuICB3aWxsLWNoYW5nZSB0cmFuc2Zvcm1cbiAgLW1vei1vc3gtZm9udC1zbW9vdGhpbmcgZ3JheXNjYWxlXG4gIGJhY2tmYWNlLXZpc2liaWxpdHkgaGlkZGVuXG4gIHRyYW5zZm9ybSB0cmFuc2xhdGVaKDApXG4gIHRyYW5zaXRpb24gdHJhbnNmb3JtIC4xNXMgZWFzZS1vdXQsIGNvbG9yIC4xNXMgZWFzZS1vdXQsIGJhY2tncm91bmQtY29sb3IgLjE1cyBlYXNlLW91dFxuICAmOmZvY3VzLFxuICAmOmhvdmVyXG4gICAgYmFja2dyb3VuZC1jb2xvciAjOWE5ZWE0ICsgMjUlXG4gICAgY29sb3IgI2ZmZlxuICAmLS1kZWZhdWx0XG4gICAgYm9yZGVyLWNvbG9yICM5YTllYTRcbiAgJi0tcHJpbWFyeVxuICAgIGJvcmRlci1jb2xvciAjZmZmXG4gICAgYmFja2dyb3VuZCAjOWE5ZWE0XG4gICAgY29sb3IgI2ZmZlxuIiwiLnBhZ2luYXRpb25cbiAgZGlzcGxheSBibG9ja1xuICB0ZXh0LWFsaWduIGNlbnRlclxuICBtYXJnaW4tdG9wIHNwYWNpbmdCYXNlXG4gIEBleHRlbmQgLmNsZWFyZml4XG4gIC5jb250YWluZXJcbiAgICBwb3NpdGlvbiByZWxhdGl2ZVxuICBhLCBzcGFuXG4gICAgZGlzcGxheSBpbmxpbmUtYmxvY2tcbiAgICBwYWRkaW5nIDE1cHhcbiAgICB3aWR0aCAxMDAlXG4gICAgK2Fib3ZlKHBob25lLXNtKVxuICAgICAgZGlzcGxheSBibG9ja1xuICAgICAgd2lkdGggYXV0b1xuICBzcGFuXG4gICAgb3BhY2l0eSAuNlxuICAmX19wcmV2XG4gICAgK2Fib3ZlKHBob25lLXNtKVxuICAgICAgZmxvYXQgbGVmdFxuICAgICAgbGVmdCAwXG4gICZfX25leHRcbiAgICArYWJvdmUocGhvbmUtc20pXG4gICAgICBmbG9hdCByaWdodFxuICAgICAgcmlnaHQgMFxuICAmX19wcmV2LFxuICAmX19uZXh0XG4gICAgbWFyZ2luIDBcbiAgICBAZXh0ZW5kIC5idXR0b25cbiAgICBAZXh0ZW5kIC5idXR0b24tLWRlZmF1bHRcbiAgICArYWJvdmUocGhvbmUtc20pXG4gICAgICB0b3AgMFxuICAgICAgcG9zaXRpb24gYWJzb2x1dGVcbiAgICAgIHotaW5kZXggMTBcbiIsIi5oZWFkZXJcbiAgbWluLWhlaWdodCA2MHB4XG4gIGJhY2tncm91bmQtY29sb3Igd2hpdGVDb2xvclxuICBib3gtc2hhZG93IDAgMCA0MHB4IDAgcmdiYShibGFja0NvbG9yLCAuMSlcbiAgei1pbmRleCAxMDBcbiAgcGFkZGluZy1sZWZ0IDEuODc1cmVtXG4gIHBhZGRpbmctcmlnaHQgMS44NzVyZW1cbiAgbWFyZ2luLWJvdHRvbSAzMHB4XG4gIHBvc2l0aW9uIGZpeGVkXG4gIHRvcCAwXG4gIHJpZ2h0IDBcbiAgbGVmdCAwXG4gIHdpZHRoIDEwMCVcbiAgbWFyZ2luLWxlZnQgMFxuICB0cmFuc2l0aW9uIGFsbCAuM3MgY3ViaWMtYmV6aWVyKC40LCAyLCAuNjgsIDEpXG4gIEBleHRlbmQgLmNsZWFyZml4XG4gICthYm92ZSh0YWJsZXQtbWQpXG4gICAgd2lkdGggY2FsYygxMDAlIC0gMjByZW0pXG4gICAgbWFyZ2luLWxlZnQgMjByZW1cbiAgJl9fbmF2YmFyXG4gICAgcG9zaXRpb24gYWJzb2x1dGVcbiAgICByaWdodCAwXG4gICAgbGVmdCAwXG4gICAgdG9wIDBcbiAgICB0cmFuc2Zvcm0gdHJhbnNsYXRlM2QoMCwgLTE1MCUsIDApXG4gICAgdHJhbnNpdGlvbiBhbGwgLjNzIGN1YmljLWJlemllciguNCwgMiwgLjY4LCAxKVxuICAgIGJhY2tncm91bmQtY29sb3Igd2hpdGVDb2xvclxuICAgIGJveC1zaGFkb3cgMCAwIDQwcHggMCByZ2JhKGJsYWNrQ29sb3IsIC4xKVxuICAgIHotaW5kZXggMTAwXG4gICAgK2Fib3ZlKHBob25lLXNtKVxuICAgICAgdHJhbnNmb3JtIHRyYW5zbGF0ZTNkKDAsIDAsIDApXG4gICAgICBib3gtc2hhZG93IG5vbmVcbiAgJl9fbmF2XG4gICAgdGV4dC1hbGlnbiByaWdodFxuICAgIGxpc3Qtc3R5bGUgbm9uZVxuICAgIHBhZGRpbmcgKHNwYWNpbmdMYXJnZSAqIDQpIHNwYWNpbmdCYXNlIHNwYWNpbmdCYXNlXG4gICAgbWFyZ2luIDBcbiAgICArYWJvdmUocGhvbmUtc20pXG4gICAgICBwYWRkaW5nIDBcbiAgICAgIGZsb2F0IHJpZ2h0XG4gICAgJi1pdGVtXG4gICAgICBkaXNwbGF5IGJsb2NrXG4gICAgICArYWJvdmUocGhvbmUtc20pXG4gICAgICAgIGRpc3BsYXkgaW5saW5lLWJsb2NrXG4gICAgJi1saW5rLFxuICAgICYtc2VhcmNoLFxuICAgIHN2Z1xuICAgICAgZGlzcGxheSBpbmxpbmUtYmxvY2tcbiAgICAgIGxpbmUtaGVpZ2h0IDYwcHhcbiAgICAmLXNlYXJjaCxcbiAgICAmLWxpbmtcbiAgICAgIGZvbnQtc2l6ZSAxNnB4XG4gICAgICBmb250LXdlaWdodCA1MDBcbiAgICAgIGxldHRlci1zcGFjaW5nIDAuMXB4XG4gICAgICB0ZXh0LWRlY29yYXRpb24gbm9uZVxuICAgICAgcGFkZGluZyAwIDEuMjVyZW1cbiAgICAgIGN1cnNvciBwb2ludGVyXG4gICAgICBjb2xvciAjOWE5ZWE0XG4gICAgICBwb3NpdGlvbiByZWxhdGl2ZVxuICAgICAgJjphZnRlclxuICAgICAgICBkaXNwbGF5IGJsb2NrXG4gICAgICAgIGNvbnRlbnQgJydcbiAgICAgICAgd2lkdGggMFxuICAgICAgICBoZWlnaHQgM3B4XG4gICAgICAgIGJhY2tncm91bmQgIzZmYTFlOFxuICAgICAgICBwb3NpdGlvbiBhYnNvbHV0ZVxuICAgICAgICBib3R0b20gMFxuICAgICAgICB0cmFuc2l0aW9uIHdpZHRoIC4xMnMgZWFzZS1pbi1vdXRcbiAgICAgICYtLWFjdGl2ZSxcbiAgICAgICY6aG92ZXJcbiAgICAgICAgY29sb3IgIzZmYTFlOFxuICAgICAgICAmOmFmdGVyXG4gICAgICAgICAgd2lkdGggNDAlXG4gICAgJi1zZWFyY2ggc3ZnXG4gICAgICBwb3NpdGlvbiByZWxhdGl2ZVxuICAgICAgdG9wIDVweFxuIiwiLnNpZGViYXJcbiAgbWF4LXdpZHRoIDIwcmVtXG4gIGRpc3BsYXkgZmxleFxuICAtd2Via2l0LWJveC1vcmllbnQgdmVydGljYWxcbiAgLXdlYmtpdC1ib3gtZGlyZWN0aW9uIG5vcm1hbFxuICBmbGV4LWRpcmVjdGlvbiBjb2x1bW5cbiAgaGVpZ2h0IDEwMHZoXG4gIGJhY2tncm91bmQgIzNhMzgzOCB1cmwoLi4vaW1hZ2VzL2hlcm8taW1hZ2UucG5nKSBuby1yZXBlYXQgODUlIDBcbiAgYmFja2dyb3VuZC1zaXplIGNvdmVyIDEwMCVcbiAgei1pbmRleCAyMDBcbiAgcG9zaXRpb24gZml4ZWRcbiAgbGVmdCAwXG4gIHJpZ2h0IDBcbiAgYm90dG9tIDBcbiAgdHJhbnNpdGlvbiBhbGwgLjNzIGN1YmljLWJlemllciguNCwyLC42OCwxKVxuICB0cmFuc2Zvcm0gdHJhbnNsYXRlM2QoLTEwMCUsIDAsIDApXG4gICthYm92ZSh0YWJsZXQtbWQpXG4gICAgdHJhbnNmb3JtIHRyYW5zbGF0ZTNkKDAsIDAsIDApXG4gICY6OmJlZm9yZVxuICAgIGNvbnRlbnQgJydcbiAgICBwb3NpdGlvbiBhYnNvbHV0ZVxuICAgIGRpc3BsYXkgYmxvY2tcbiAgICB3aWR0aCAxMDAlXG4gICAgaGVpZ2h0IDEwMCVcbiAgICB0b3AgMFxuICAgIHJpZ2h0IDBcbiAgICBib3R0b20gMFxuICAgIGxlZnQgMFxuICAgIGJhY2tncm91bmQtY29sb3IgcmdiYSgjM2EzODM4LCAuOSlcbiAgICB6LWluZGV4IDFcbiAgJl9fdGl0bGVcbiAgICBkaXNwbGF5IGJsb2NrXG4gICAgdGV4dC1hbGlnbiBjZW50ZXJcbiAgICBmb250LXNpemUgMjJweFxuICAgIHBhZGRpbmcgMS44NzVyZW0gMS4yNXJlbVxuICAgIGZsZXg6IG5vbmVcbiAgICBhXG4gICAgICBjb2xvciB3aGl0ZUNvbG9yXG4gICAgICBmb250LXdlaWdodCBmb250V2VpZ2h0Qm9sZFxuICAgICAgdGV4dC1kZWNvcmF0aW9uIG5vbmVcbiAgICBzdmdcbiAgICAgIGRpc3BsYXkgaW5saW5lLWJsb2NrXG4gICAgc3BhblxuICAgICAgZGlzcGxheSBibG9ja1xuICAmX190aXRsZSxcbiAgJl9fZm9vdGVyLFxuICAmX19uYXZiYXJcbiAgICBwb3NpdGlvbiByZWxhdGl2ZVxuICAgIHotaW5kZXggMlxuICAmX19uYXZiYXJcbiAgICBwYWRkaW5nIDAgMS4yNXJlbVxuICAgIGZsZXggMVxuICAgICYsXG4gICAgLm5hdlxuICAgICAgb3ZlcmZsb3cteSBhdXRvXG4gICAgLm5hdlxuICAgICAgbWFyZ2luLWJvdHRvbSAxLjJyZW1cbiAgJl9fZm9vdGVyXG4gICAgcGFkZGluZyAxcmVtIDEuMjVyZW1cbiAgICBib3JkZXItdG9wIDFweCBzb2xpZCByZ2JhKHdoaXRlQ29sb3IsIC4yKVxuICAgIGp1c3RpZnktY29udGVudCBzcGFjZS1hcm91bmRcbiAgICBkaXNwbGF5OiBmbGV4XG4gICAgYVxuICAgICAgYWxpZ24taXRlbXM6IGNlbnRlclxuICAgIHN2Z1xuICAgICAgd2lkdGggMS4zNzVyZW1cbiAgICAgIGZpbGwgd2hpdGVDb2xvclxuXG4iLCIubmF2XG4gIGxpc3Qtc3R5bGUgbm9uZVxuICBwYWRkaW5nIDBcbiAgbWFyZ2luIDBcbiAgJl9faXRlbVxuICAgIGRpc3BsYXkgYmxvY2tcbiAgICBtYXJnaW4tYm90dG9tIDJweFxuICAmX19saW5rXG4gICAgZm9udC1zaXplIDE0cHhcbiAgICB0ZXh0LWRlY29yYXRpb24gbm9uZVxuICAgIGRpc3BsYXkgYmxvY2tcbiAgICBwYWRkaW5nIC43NXJlbSAxLjI1cmVtXG4gICAgYm9yZGVyLXJhZGl1cyAuMzEyNXJlbVxuICAgIHRyYW5zaXRpb24gY29sb3IgLjJzIGVhc2UtaW4tb3V0LFxuICAgICAgYmFja2dyb3VuZC1jb2xvciAuMnMgZWFzZS1pbi1vdXRcbiAgICAmLFxuICAgICY6aG92ZXIsXG4gICAgJjpmb2N1c1xuICAgICAgY29sb3Igd2hpdGVDb2xvclxuICAgICYtLWFjdGl2ZSxcbiAgICAmOmhvdmVyLFxuICAgICY6Zm9jdXNcbiAgICAgIGJhY2tncm91bmQtY29sb3IgcmdiYSh3aGl0ZUNvbG9yLCAuMilcbiAgICAmLS1hY3RpdmVcbiAgICAgIHBvaW50ZXItZXZlbnRzIG5vbmVcbiAgJl9fYmFkZ2VcbiAgICBmbG9hdCByaWdodFxuICAgIHBvc2l0aW9uIHJlbGF0aXZlXG4gICAgdG9wIDFweFxuICAgIGNvbG9yICMxMTFcbiAgICBiYWNrZ3JvdW5kLWNvbG9yIHJnYmEod2hpdGVDb2xvciwgLjc1KVxuICAgIGRpc3BsYXkgaW5saW5lLWJsb2NrXG4gICAgcGFkZGluZyAuMjVlbSAuNGVtXG4gICAgZm9udC1zaXplIDEycHhcbiAgICBmb250LXdlaWdodCA3MDBcbiAgICBsaW5lLWhlaWdodCAxXG4gICAgdGV4dC1hbGlnbiBjZW50ZXJcbiAgICB3aGl0ZS1zcGFjZSBub3dyYXBcbiAgICB2ZXJ0aWNhbC1hbGlnbiBiYXNlbGluZVxuICAgIGJvcmRlci1yYWRpdXMgLjI1cmVtXG4iLCIuc2VhcmNoXG4gIGRpc3BsYXkgbm9uZVxuICBwb3NpdGlvbiBmaXhlZFxuICB0b3AgMFxuICByaWdodCAwXG4gIGJvdHRvbSAwXG4gIGxlZnQgMFxuICB3aWR0aCAxMDAlXG4gIGhlaWdodCAxMDAlXG4gIHotaW5kZXggMTAwMDBcbiAgYmFja2dyb3VuZC1jb2xvciByZ2JhKCNmZmYsIC44KVxuICAmX19pbm5lclxuICAgIGRpc3BsYXkgYmxvY2tcbiAgICBtYXgtd2lkdGggMTMwMHB4XG4gICAgYmFja2dyb3VuZC1jb2xvciBiYWNrZ3JvdW5kQmFzZVxuICAgIGJveC1zaGFkb3cgMCAxcHggMTRweCAwIHJnYmEoMTQ0LDE1NCwxNjgsMC42NClcbiAgICBtYXJnaW4gc3BhY2luZ0Jhc2UgYXV0b1xuICAgIHBvc2l0aW9uIHJlbGF0aXZlXG4gICAgb3ZlcmZsb3cteSBhdXRvXG4gICZfX2Nsb3NlXG4gICAgcG9zaXRpb24gYWJzb2x1dGVcbiAgICByaWdodCBzcGFjaW5nQmFzZVxuICAgIHRvcCBzcGFjaW5nQmFzZVxuICAgIGN1cnNvciBwb2ludGVyXG4gICZfX2NvbnRhaW5lclxuICAgIGhlaWdodCBjYWxjKDEwMHZoIC0gMTgwcHgpXG4gICAgcGFkZGluZyBzcGFjaW5nQmFzZVxuICAmX19ncm91cFxuICAgIGJhY2tncm91bmQgI2ZmZlxuICAgIGJvcmRlci1ib3R0b20gMXB4IHNvbGlkIHJnYmEoIzAwMCwgLjE1KVxuICAgIHBhZGRpbmcgc3BhY2luZ0Jhc2VcbiAgICBkaXNwbGF5IGJsb2NrXG4gICAgd2lkdGggMTAwJVxuICAgIEBleHRlbmQgJGNsZWFyZml4XG4gICZfX2lucHV0XG4gICAgYm9yZGVyIG5vbmVcbiAgICBiYWNrZ3JvdW5kIG5vbmUgI2ZmZlxuICAgIGJveC1zaGFkb3cgMCAwIDE0cHggMCByZ2JhKDE0NCwxNTQsMTY4LDAuNDYpXG4gICAgbGluZS1oZWlnaHQgMzBweFxuICAgIGZvbnQtc2l6ZSAyNnB4XG4gICAgdGV4dC1hbGlnbiBsZWZ0XG4gICAgcGFkZGluZyAxNXB4IDMwcHhcbiAgICBtYXJnaW4gMCBhdXRvXG4gICAgZGlzcGxheSBibG9ja1xuICAgIG1heC13aWR0aCA5MDBweFxuICAgIGZvbnQtd2VpZ2h0IDMwMFxuICAgIGJvcmRlci1yYWRpdXMgNHB4XG4gICAgLXdlYmtpdC1hcHBlYXJhbmNlIG5vbmVcbiAgICBhcHBlYXJhbmNlIG5vbmVcblxuICAmX19saXN0XG4gICAgbGlzdC1zdHlsZSBub25lXG5cbmlucHV0I3RvZ2dsZVNlYXJjaFxuICAmOmNoZWNrZWRcbiAgICB+IC5zZWFyY2hcbiAgICAgIGRpc3BsYXkgYmxvY2tcbiIsIi5mb290ZXJcbiAgcGFkZGluZy10b3Agc3BhY2luZ0Jhc2VcbiAgcGFkZGluZy1ib3R0b20gc3BhY2luZ0Jhc2VcbiAgbWFyZ2luLXRvcCBzcGFjaW5nQmFzZVxuICBib3JkZXItdG9wIGJvcmRlckJhc2VcbiAgQGV4dGVuZCAuY2xlYXJmaXhcbiAgc21hbGxcbiAgICBmb250LXNpemUgMTBweFxuICAgIGZvbnQtd2VpZ2h0IDEwMFxuICAgIGNvbG9yIGxpZ2h0TmF2eUNvbG9yXG4gICAgZGlzcGxheSBpbmxpbmUtYmxvY2tcbiAgLnRleHQtbGVmdFxuICAgIGZsb2F0IGxlZnRcbiAgLnRleHQtcmlnaHRcbiAgICBmbG9hdCByaWdodFxuIiwiLnRvb2xzX190aXRsZVxuICBmb250LXNpemUgMjRweFxuICBmb250LXdlaWdodCA3MDBcbiAgY29sb3IgIzlhOWVhNFxuICBwb3NpdGlvbiByZWxhdGl2ZVxuICB0ZXh0LXRyYW5zZm9ybSB1cHBlcmNhc2VcbiAgJjpiZWZvcmVcbiAgICBjb250ZW50IGF0dHIodGl0bGUpXG4gICAgcG9zaXRpb24gYWJzb2x1dGVcbiAgICBwb2ludGVyLWV2ZW50cyBub25lXG4gICAgbGVmdCAxNXB4XG4gICAgYm90dG9tIDE1cHhcbiAgICBvcGFjaXR5IC4xMlxuICAgIGZvbnQtc2l6ZSAzMnB4XG4gICAgZm9udC13ZWlnaHQgNzAwXG4gICAgY29sb3IgIzlhOWVhNFxuICAgIGxpbmUtaGVpZ2h0IDFcbiAgICB0ZXh0LXRyYW5zZm9ybSB1cHBlcmNhc2VcbiAgICArYWJvdmUocGhvbmUtc20pXG4gICAgICBmb250LXNpemUgNDRweFxuICAmOmFmdGVyXG4gICAgY29udGVudCAnJ1xuICAgIGRpc3BsYXkgYmxvY2tcbiAgICBib3JkZXItcmFkaXVzIDVweFxuICAgIGJhY2tncm91bmQtY29sb3IgIzNhMzgzOFxuICAgIHdpZHRoIDMwcHhcbiAgICBoZWlnaHQgNHB4XG4iXX0= */
